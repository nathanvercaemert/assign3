(undo-tree-save-format-version . 1)
"d8bf4fddc48d0fd88a8700e820efd5ad0def8abd"
[nil nil nil nil (25164 46744 113703 0) 0 nil]
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -1947) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1948) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -1949) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1950) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1951) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1952) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1953) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1954) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1955) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) 1956) nil (25164 46744 113653 800000) 0 nil])
([nil nil ((1947 . 1968)) nil (25164 46744 112722 900000) 0 nil])
([nil nil ((1968 . 1975)) nil (25164 46744 112705 600000) 0 nil])
([nil nil ((1975 . 1996)) nil (25164 46744 112704 100000) 0 nil])
([nil nil ((1996 . 2017)) nil (25164 46744 112702 500000) 0 nil])
([nil nil ((2017 . 2019)) nil (25164 46744 112700 300000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -2063) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) 2064) nil (25164 46744 112696 200000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2062) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) 2063) nil (25164 46744 112652 200000) 0 nil])
([nil nil ((#("
        # print(queen)
        # print(domain)
 " 0 1 (fontified t) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 24 (fontified t face font-lock-comment-face) 24 32 (fontified t) 32 34 (fontified t face font-lock-comment-delimiter-face) 34 48 (fontified t face font-lock-comment-face) 48 49 (fontified t)) . 2062) (undo-tree-id632 . -49) (undo-tree-id633 . -49)) nil (25164 46744 112598 100000) 0 nil])
([nil nil ((2062 . 2111)) nil (25164 46744 112594 800000) 0 nil])
([nil nil ((#("
        # print(queen)
        # print(domain)" 0 1 (fontified t) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 24 (fontified t face font-lock-comment-face) 24 32 (fontified t) 32 34 (fontified t face font-lock-comment-delimiter-face) 34 47 (fontified t face font-lock-comment-face)) . 2062) (undo-tree-id630 . -47) (undo-tree-id631 . -47)) nil (25164 46744 112593 100000) 0 nil])
([nil nil ((2062 . 2063) (#(")" 0 1 (fontified nil)) . -2062) (2062 . 2063)) nil (25164 46744 112589 600000) 0 nil])
([nil nil ((2274 . 2275) (t 25164 38471 290589 600000)) nil (25164 46744 112587 500000) 0 nil])
([nil nil ((2275 . 2296)) nil (25164 46744 112585 600000) 0 nil])
([nil nil ((2296 . 2308)) nil (25164 46744 112584 100000) 0 nil])
([nil nil ((2308 . 2312)) nil (25164 46744 112582 400000) 0 nil])
([nil nil ((2410 . 2417)) nil (25164 46744 112581 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -2411) (undo-tree-id624 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -2412) (undo-tree-id625 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -2413) (undo-tree-id626 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2414) (undo-tree-id627 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2415) (undo-tree-id628 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -2416) (undo-tree-id629 . -1) 2417) nil (25164 46744 112577 800000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -2410) (undo-tree-id623 . -1) 2411) nil (25164 46744 112567 800000) 0 nil])
([nil nil ((2424 . 2425) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . -2424) (2410 . 2425)) nil (25164 46744 112564 400000) 0 nil])
([nil nil ((2613 . 2618)) nil (25164 46744 112562 300000) 0 nil])
([nil nil ((2618 . 2639)) nil (25164 46744 112560 900000) 0 nil])
([nil nil ((2640 . 2654) (2639 . 2641) (#("\"" 0 1 (fontified nil face font-lock-comment-face)) . -2639) (2639 . 2640)) nil (25164 46744 112558 900000) 0 nil])
([nil nil ((2655 . 2661)) nil (25164 46744 112555 800000) 0 nil])
([nil nil ((2713 . 2722)) nil (25164 46744 112554 500000) 0 nil])
([nil nil ((2722 . 2729)) nil (25164 46744 112553 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -2728) (undo-tree-id622 . -1) 2729) nil (25164 46744 112537 100000) 0 nil])
([nil nil ((2728 . 2745)) nil (25164 46744 112533 600000) 0 nil])
([nil nil ((2745 . 2754)) nil (25164 46744 112531 700000) 0 nil])
([nil nil ((2820 . 2833)) nil (25164 46744 112530 0) 0 nil])
([nil nil ((2833 . 2847)) nil (25164 46744 112508 300000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -2835) (undo-tree-id610 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -2836) (undo-tree-id611 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2837) (undo-tree-id612 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -2838) (undo-tree-id613 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -2839) (undo-tree-id614 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -2840) (undo-tree-id615 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2841) (undo-tree-id616 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -2842) (undo-tree-id617 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -2843) (undo-tree-id618 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -2844) (undo-tree-id619 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -2845) (undo-tree-id620 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -2846) (undo-tree-id621 . -1) 2847) nil (25164 46744 112503 700000) 0 nil])
([nil nil ((2835 . 2851)) nil (25164 46744 112487 900000) 0 nil])
([nil nil ((3163 . 3164) (t 25164 38674 300589 600000)) nil (25164 46744 112486 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3163) (undo-tree-id609 . -1) 3164) nil (25164 46744 112483 800000) 0 nil])
([nil nil ((3163 . 3164)) nil (25164 46744 112480 400000) 0 nil])
([nil nil ((3164 . 3183)) nil (25164 46744 112478 800000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -3182) (undo-tree-id608 . -1) 3183) nil (25164 46744 112476 900000) 0 nil])
([nil nil ((3182 . 3203)) nil (25164 46744 112474 300000) 0 nil])
([nil nil ((3203 . 3205)) nil (25164 46744 112472 400000) 0 nil])
([nil nil ((3205 . 3226)) nil (25164 46744 112470 900000) 0 nil])
([nil nil ((3226 . 3228)) nil (25164 46744 112469 100000) 0 nil])
([nil nil ((3454 . 3455) (t 25164 38694 510589 600000)) nil (25164 46744 112467 400000) 0 nil])
([nil nil ((3455 . 3457)) nil (25164 46744 112464 800000) 0 nil])
([nil nil ((3501 . 3506)) nil (25164 46744 112462 900000) 0 nil])
([nil nil ((3506 . 3527)) nil (25164 46744 112461 400000) 0 nil])
([nil nil ((3527 . 3548)) nil (25164 46744 112459 900000) 0 nil])
([nil nil ((3548 . 3561)) nil (25164 46744 112458 300000) 0 nil])
([nil nil ((3561 . 3582)) nil (25164 46744 112457 0) 0 nil])
([nil nil ((3582 . 3598)) nil (25164 46744 112455 400000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -3595) (undo-tree-id605 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -3596) (undo-tree-id606 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3597) (undo-tree-id607 . -1) 3598) nil (25164 46744 112453 0) 0 nil])
([nil nil ((3595 . 3602)) nil (25164 46744 112445 500000) 0 nil])
([nil nil ((3457 . 3478)) nil (25164 46744 112425 200000) 0 nil])
([nil nil ((3478 . 3499)) nil (25164 46744 112423 600000) 0 nil])
([nil nil ((3499 . 3520)) nil (25164 46744 112422 0) 0 nil])
([nil nil ((3520 . 3521)) nil (25164 46744 112420 100000) 0 nil])
([nil nil ((3883 . 3900)) nil (25164 46744 112418 600000) 0 nil])
([nil nil ((3900 . 3919)) nil (25164 46744 112417 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3901) (undo-tree-id587 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -3902) (undo-tree-id588 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -3903) (undo-tree-id589 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -3904) (undo-tree-id590 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -3905) (undo-tree-id591 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3906) (undo-tree-id592 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -3907) (undo-tree-id593 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -3908) (undo-tree-id594 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -3909) (undo-tree-id595 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -3910) (undo-tree-id596 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3911) (undo-tree-id597 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -3912) (undo-tree-id598 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -3913) (undo-tree-id599 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -3914) (undo-tree-id600 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -3915) (undo-tree-id601 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -3916) (undo-tree-id602 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -3917) (undo-tree-id603 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -3918) (undo-tree-id604 . -1) 3919) nil (25164 46744 112411 200000) 0 nil])
([nil nil ((#("                #" 0 16 (fontified t) 16 17 (fontified t face font-lock-comment-delimiter-face)) . 3884) (undo-tree-id585 . -17) (undo-tree-id586 . -17) 3901) nil (25164 46744 112389 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3883) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 3884) nil (25164 46744 112385 700000) 0 nil])
([nil nil ((3943 . 3959) (#("                " 0 16 (fontified nil)) . 3942) (undo-tree-id582 . -16) (3941 . 3959)) nil (25164 46744 112380 600000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . 3943) (undo-tree-id580 . -16) (undo-tree-id581 . -16) 3959) nil (25164 46744 112377 400000) 0 nil])
([nil nil ((3943 . 3959)) nil (25164 46744 112373 500000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3955) (undo-tree-id579 . -4) 3959) nil (25164 46744 112371 600000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3951) (undo-tree-id578 . -4) 3955) nil (25164 46744 112368 700000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3947) (undo-tree-id577 . -4) 3951) nil (25164 46744 112365 700000) 0 nil])
([nil nil ((3947 . 3967)) nil (25164 46744 112363 0) 0 nil])
([nil nil ((3967 . 3985)) nil (25164 46744 112361 700000) 0 nil])
([nil nil ((4009 . 4014)) nil (25164 46744 112360 200000) 0 nil])
([nil nil ((4014 . 4025)) nil (25164 46744 112359 0) 0 nil])
([nil nil ((4152 . 4169) (t 25164 39056 270589 600000)) nil (25164 46744 112357 500000) 0 nil])
([nil nil ((4169 . 4190)) nil (25164 46744 112355 800000) 0 nil])
([nil nil ((4190 . 4203)) nil (25164 46744 112354 200000) 0 nil])
([nil nil ((4260 . 4277)) nil (25164 46744 112352 700000) 0 nil])
([nil nil ((4277 . 4286)) nil (25164 46744 112351 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -4285) (undo-tree-id576 . -1) 4286) nil (25164 46744 112349 100000) 0 nil])
([nil nil ((4285 . 4306)) nil (25164 46744 112346 400000) 0 nil])
([nil nil ((4306 . 4315)) nil (25164 46744 112345 0) 0 nil])
([nil nil ((#("if it's the next queen being assigned" 0 5 (fontified t face font-lock-comment-face) 5 29 (fontified t face font-lock-comment-face) 29 37 (fontified t face font-lock-comment-face)) . -4603) (undo-tree-id574 . -37) (undo-tree-id575 . -37) (t 25164 39130 530589 600000)) nil (25164 46744 112343 0) 0 nil])
([nil nil ((4603 . 4624)) nil (25164 46744 112339 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -4605) (undo-tree-id555 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -4606) (undo-tree-id556 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -4607) (undo-tree-id557 . -1) (#("'" 0 1 (fontified t face font-lock-comment-face)) . -4608) (undo-tree-id558 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -4609) (undo-tree-id559 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -4610) (undo-tree-id560 . -1) (#("g" 0 1 (fontified t face font-lock-comment-face)) . -4611) (undo-tree-id561 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -4612) (undo-tree-id562 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -4613) (undo-tree-id563 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -4614) (undo-tree-id564 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -4615) (undo-tree-id565 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -4616) (undo-tree-id566 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -4617) (undo-tree-id567 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -4618) (undo-tree-id568 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -4619) (undo-tree-id569 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -4620) (undo-tree-id570 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -4621) (undo-tree-id571 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -4622) (undo-tree-id572 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -4623) (undo-tree-id573 . -1) 4624) nil (25164 46744 112333 600000) 0 nil])
([nil nil ((4605 . 4611)) nil (25164 46744 112311 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -4606) (undo-tree-id550 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -4607) (undo-tree-id551 . -1) (#("'" 0 1 (fontified t face font-lock-comment-face)) . -4608) (undo-tree-id552 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -4609) (undo-tree-id553 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -4610) (undo-tree-id554 . -1) 4611) nil (25164 46744 112308 200000) 0 nil])
([nil nil ((4606 . 4610)) nil (25164 46744 112301 600000) 0 nil])
([nil nil ((4610 . 4631)) nil (25164 46744 112299 800000) 0 nil])
([nil nil ((4631 . 4637)) nil (25164 46744 112298 600000) 0 nil])
([nil nil ((4490 . 4495)) nil (25164 46744 112297 0) 0 nil])
([nil nil ((4495 . 4516)) nil (25164 46744 112295 500000) 0 nil])
([nil nil ((4516 . 4521)) nil (25164 46744 112294 100000) 0 nil])
([nil nil ((4521 . 4541)) nil (25164 46744 112292 900000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-comment-face)) . -4540) (undo-tree-id549 . -1) 4541) nil (25164 46744 112291 100000) 0 nil])
([nil nil ((4540 . 4542)) nil (25164 46744 112288 700000) 0 nil])
([nil nil ((#("the next" 0 5 (fontified t face font-lock-comment-face) 5 8 (fontified t face font-lock-comment-face)) . -4767) (undo-tree-id547 . -8) (undo-tree-id548 . -8) 4775 (t 25164 39178 420589 600000)) nil (25164 46744 112286 800000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -4766) (undo-tree-id545 . -1) (undo-tree-id546 . -1) 4767) nil (25164 46744 112283 100000) 0 nil])
([nil nil ((#("from next " 0 10 (fontified t face font-lock-comment-face)) . 4867) (undo-tree-id543 . -10) (undo-tree-id544 . -10)) nil (25164 46744 112279 600000) 0 nil])
([nil nil ((6334 . 6355) (t 25164 39194 660589 600000)) nil (25164 46744 112276 700000) 0 nil])
([nil nil ((6355 . 6375)) nil (25164 46744 112274 700000) 0 nil])
([nil nil ((6375 . 6396)) nil (25164 46744 112273 500000) 0 nil])
([nil nil ((6396 . 6417)) nil (25164 46744 112271 900000) 0 nil])
([nil nil ((6417 . 6423)) nil (25164 46744 112270 400000) 0 nil])
([nil nil ((6423 . 6434)) nil (25164 46744 112269 0) 0 nil])
([nil nil ((6738 . 6759) (t 25164 39221 320589 600000)) nil (25164 46744 112267 400000) 0 nil])
([nil nil ((6759 . 6764)) nil (25164 46744 112265 700000) 0 nil])
([nil nil ((6764 . 6769)) nil (25164 46744 112264 400000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -6766) (undo-tree-id540 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -6767) (undo-tree-id541 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -6768) (undo-tree-id542 . -1) 6769) nil (25164 46744 112262 200000) 0 nil])
([nil nil ((6766 . 6787)) nil (25164 46744 112256 300000) 0 nil])
([nil nil ((6787 . 6799)) nil (25164 46744 112254 900000) 0 nil])
([nil nil ((5993 . 6006) (t 25164 39237 280589 600000)) nil (25164 46744 112253 500000) 0 nil])
([nil nil ((6006 . 6014)) nil (25164 46744 112251 400000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -6013) (undo-tree-id539 . -1) 6014) nil (25164 46744 112249 900000) 0 nil])
([nil nil ((6013 . 6034)) nil (25164 46744 112247 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -6032) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -6033) (undo-tree-id538 . -1) 6034) nil (25164 46744 112245 500000) 0 nil])
([nil nil ((6032 . 6043)) nil (25164 46744 112241 400000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-comment-face)) . -6041) (undo-tree-id534 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -6042) (undo-tree-id535 . -1) 6043) nil (25164 46744 112239 700000) 0 nil])
([nil nil ((6041 . 6043)) nil (25164 46744 112236 200000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -6041) (undo-tree-id532 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -6042) (undo-tree-id533 . -1) 6043) nil (25164 46744 112234 500000) 0 nil])
([nil nil ((6041 . 6047)) nil (25164 46744 112230 900000) 0 nil])
([nil nil ((6047 . 6064)) nil (25164 46744 112229 700000) 0 nil])
([nil nil ((5976 . 6024) (#(" " 0 1 (fontified nil)) . 5975) (undo-tree-id531 . -1) (5976 . 5977)) nil (25164 46744 112227 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 5976) (undo-tree-id529 . -1) (5975 . 5976) (#("                                                " 0 48 (fontified t)) . 5976) (undo-tree-id530 . -48)) nil (25164 46744 112224 500000) 0 nil])
([nil nil ((5921 . 5930)) nil (25164 46744 112220 400000) 0 nil])
([nil nil ((5930 . 5944)) nil (25164 46744 112219 0) 0 nil])
([nil nil ((5944 . 5965)) nil (25164 46744 112217 600000) 0 nil])
([nil nil ((5965 . 5967)) nil (25164 46744 112216 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -5966) (undo-tree-id528 . -1) 5967) nil (25164 46744 112214 500000) 0 nil])
([nil nil ((#("
        print(arcQueue)" 0 1 (fontified t) 1 8 (fontified t) 8 9 (fontified t) 9 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 17 (fontified t) 17 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face))) . 7140) (undo-tree-id526 . -24) (undo-tree-id527 . -24) (t 25164 39265 360589 600000)) nil (25164 46744 112211 700000) 0 nil])
([nil nil ((7140 . 7149) (t 25164 39275 890589 600000)) nil (25164 46744 112208 0) 0 nil])
([nil nil ((7149 . 7151)) nil (25164 46744 112206 100000) 0 nil])
([nil nil ((7151 . 7167)) nil (25164 46744 112204 600000) 0 nil])
([nil nil ((7200 . 7209)) nil (25164 46744 112203 0) 0 nil])
([nil nil ((7209 . 7222)) nil (25164 46744 112201 600000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -7220) (undo-tree-id524 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7221) (undo-tree-id525 . -1) 7222) nil (25164 46744 112199 400000) 0 nil])
([nil nil ((7220 . 7238)) nil (25164 46744 112195 200000) 0 nil])
([nil nil ((7238 . 7245)) nil (25164 46744 112193 800000) 0 nil])
([nil nil ((7271 . 7280)) nil (25164 46744 112192 400000) 0 nil])
([nil nil ((7280 . 7300)) nil (25164 46744 112191 100000) 0 nil])
([nil nil ((7330 . 7339)) nil (25164 46744 112189 600000) 0 nil])
([nil nil ((7339 . 7354)) nil (25164 46744 112188 200000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -7353) (undo-tree-id523 . -1) 7354) nil (25164 46744 112186 500000) 0 nil])
([nil nil ((7353 . 7360)) nil (25164 46744 112183 700000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -7358) (undo-tree-id521 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -7359) (undo-tree-id522 . -1) 7360) nil (25164 46744 112181 600000) 0 nil])
([nil nil ((7358 . 7362)) nil (25164 46744 112176 900000) 0 nil])
([nil nil ((7409 . 7418)) nil (25164 46744 112175 500000) 0 nil])
([nil nil ((7418 . 7424)) nil (25164 46744 112174 0) 0 nil])
([nil nil ((7424 . 7445)) nil (25164 46744 112172 600000) 0 nil])
([nil nil ((7445 . 7447)) nil (25164 46744 112171 100000) 0 nil])
([nil nil ((7670 . 7679) (t 25164 39322 510589 600000)) nil (25164 46744 112169 400000) 0 nil])
([nil nil ((7679 . 7691)) nil (25164 46744 112167 600000) 0 nil])
([nil nil ((7691 . 7712)) nil (25164 46744 112166 0) 0 nil])
([nil nil ((7712 . 7718)) nil (25164 46744 112164 600000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -7717) (undo-tree-id520 . -1) 7718) nil (25164 46744 112162 900000) 0 nil])
([nil nil ((7717 . 7729)) nil (25164 46744 112160 300000) 0 nil])
([nil nil ((7785 . 7798)) nil (25164 46744 112158 800000) 0 nil])
([nil nil ((7798 . 7804)) nil (25164 46744 112157 200000) 0 nil])
([nil nil ((7804 . 7807)) nil (25164 46744 112155 800000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -7798) (undo-tree-id511 . -1) (#("e" 0 1 (fontified t)) . -7799) (undo-tree-id512 . -1) (#(" " 0 1 (fontified t)) . -7800) (undo-tree-id513 . -1) (#("a" 0 1 (fontified t)) . -7801) (undo-tree-id514 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -7802) (undo-tree-id515 . -1) (#("s" 0 1 (fontified t)) . -7803) (undo-tree-id516 . -1) (#("u" 0 1 (fontified t)) . -7804) (undo-tree-id517 . -1) (#("m" 0 1 (fontified t)) . -7805) (undo-tree-id518 . -1) (#("e" 0 1 (fontified t)) . -7806) (undo-tree-id519 . -1) 7807) nil (25164 46744 112152 100000) 0 nil])
([nil nil ((7798 . 7817)) nil (25164 46744 112141 0) 0 nil])
([nil nil ((7817 . 7838)) nil (25164 46744 112139 500000) 0 nil])
([nil nil ((7838 . 7844)) nil (25164 46744 112138 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -7840) (undo-tree-id507 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -7841) (undo-tree-id508 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -7842) (undo-tree-id509 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7843) (undo-tree-id510 . -1) 7844) nil (25164 46744 112135 500000) 0 nil])
([nil nil ((7840 . 7854)) nil (25164 46744 112129 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -7840) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -7841) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -7842) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -7843) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7844) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -7845) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -7846) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -7847) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -7848) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -7849) (undo-tree-id502 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -7850) (undo-tree-id503 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -7851) (undo-tree-id504 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -7852) (undo-tree-id505 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -7853) (undo-tree-id506 . -1) 7854) nil (25164 46744 112124 0) 0 nil])
([nil nil ((7840 . 7861)) nil (25164 46744 112083 500000) 0 nil])
([nil nil ((7861 . 7865)) nil (25164 46744 112082 100000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -7864) (undo-tree-id483 . -1) 7865) nil (25164 46744 112080 500000) 0 nil])
([nil nil ((7864 . 7867)) nil (25164 46744 112078 0) 0 nil])
([nil nil ((7867 . 7880)) nil (25164 46744 112076 600000) 0 nil])
([nil nil ((7880 . 7883)) nil (25164 46744 112075 0) 0 nil])
([nil nil ((7883 . 7904)) nil (25164 46744 112073 600000) 0 nil])
([nil nil ((7904 . 7925)) nil (25164 46744 112072 0) 0 nil])
([nil nil ((7925 . 7927)) nil (25164 46744 112070 300000) 0 nil])
([nil nil ((7984 . 7997)) nil (25164 46744 112068 800000) 0 nil])
([nil nil ((7997 . 8018)) nil (25164 46744 112067 200000) 0 nil])
([nil nil ((8018 . 8033)) nil (25164 46744 112065 500000) 0 nil])
([nil nil ((8486 . 8507) (t 25164 39409 600589 600000)) nil (25164 46744 112063 800000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8503) (undo-tree-id482 . -4) 8507) nil (25164 46744 112061 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8499) (undo-tree-id481 . -4) 8503) nil (25164 46744 112058 400000) 0 nil])
([nil nil ((8499 . 8520)) nil (25164 46744 112055 800000) 0 nil])
([nil nil ((8520 . 8533)) nil (25164 46744 112053 900000) 0 nil])
([nil nil ((8533 . 8535)) nil (25164 46744 112052 300000) 0 nil])
([nil nil ((#("            # if there wasn't a satisfying value" 0 12 (fontified t) 12 14 (fontified t face font-lock-comment-delimiter-face) 14 48 (fontified t face font-lock-comment-face)) . 8487) (undo-tree-id479 . -48) (undo-tree-id480 . -48) 8535) nil (25164 46744 112050 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8486) (undo-tree-id477 . -1) (undo-tree-id478 . -1) 8487) nil (25164 46744 112045 100000) 0 nil])
([nil nil ((9086 . 9107) (t 25164 39438 90589 600000)) nil (25164 46744 112041 700000) 0 nil])
([nil nil ((9107 . 9124)) nil (25164 46744 112039 500000) 0 nil])
([nil nil ((9124 . 9126)) nil (25164 46744 112038 100000) 0 nil])
([nil nil ((9291 . 9300)) nil (25164 46744 112036 900000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9296) (undo-tree-id476 . -4) 9300) nil (25164 46744 112035 100000) 0 nil])
([nil nil ((9296 . 9317)) nil (25164 46744 112032 700000) 0 nil])
([nil nil ((9317 . 9323)) nil (25164 46744 112031 400000) 0 nil])
([nil nil ((9323 . 9342)) nil (25164 46744 112030 0) 0 nil])
([nil nil ((9169 . 9174)) nil (25164 46744 112028 500000) 0 nil])
([nil nil ((9174 . 9195)) nil (25164 46744 112027 100000) 0 nil])
([nil nil ((9195 . 9216)) nil (25164 46744 112025 400000) 0 nil])
([nil nil ((9216 . 9237)) nil (25164 46744 112023 600000) 0 nil])
([nil nil ((9237 . 9250)) nil (25164 46744 112022 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face font-lock-comment-face)) . -9246) (undo-tree-id472 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -9247) (undo-tree-id473 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -9248) (undo-tree-id474 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -9249) (undo-tree-id475 . -1) 9250) nil (25164 46744 112019 700000) 0 nil])
([nil nil ((9246 . 9252)) nil (25164 46744 112013 200000) 0 nil])
([nil nil ((9476 . 9481)) nil (25164 46744 112011 900000) 0 nil])
([nil nil ((9481 . 9502)) nil (25164 46744 112010 500000) 0 nil])
([nil nil ((9502 . 9515)) nil (25164 46744 112008 700000) 0 nil])
([nil nil ((9532 . 9534) (t 25164 39485 200589 600000)) nil (25164 46744 112006 900000) 0 nil])
([nil nil ((9534 . 9536)) nil (25164 46744 112005 0) 0 nil])
([nil nil ((9536 . 9557)) nil (25164 46744 112003 400000) 0 nil])
([nil nil ((9557 . 9575)) nil (25164 46744 112001 600000) 0 nil])
([nil nil ((9642 . 9647)) nil (25164 46744 112000 0) 0 nil])
([nil nil ((9647 . 9668)) nil (25164 46744 111998 500000) 0 nil])
([nil nil ((9668 . 9687)) nil (25164 46744 111997 100000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -9686) (undo-tree-id471 . -1) 9687) nil (25164 46744 111995 300000) 0 nil])
([nil nil ((9686 . 9694)) nil (25164 46744 111992 200000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -9691) (undo-tree-id468 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -9692) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -9693) (undo-tree-id470 . -1) 9694) nil (25164 46744 111989 900000) 0 nil])
([nil nil ((9691 . 9694)) nil (25164 46744 111985 300000) 0 nil])
([nil nil ((9694 . 9703)) nil (25164 46744 111983 600000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -9699) (undo-tree-id464 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -9700) (undo-tree-id465 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -9701) (undo-tree-id466 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -9702) (undo-tree-id467 . -1) 9703) nil (25164 46744 111981 100000) 0 nil])
([nil nil ((9699 . 9720)) nil (25164 46744 111974 800000) 0 nil])
([nil nil ((9720 . 9725)) nil (25164 46744 111973 200000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -9724) (undo-tree-id463 . -1) 9725) nil (25164 46744 111971 0) 0 nil])
([nil nil ((9724 . 9745)) nil (25164 46744 111968 100000) 0 nil])
([nil nil ((9745 . 9754)) nil (25164 46744 111966 400000) 0 nil])
([nil nil ((9754 . 9759)) nil (25164 46744 111964 900000) 0 nil])
([nil nil ((9759 . 9780)) nil (25164 46744 111963 200000) 0 nil])
([nil nil ((9780 . 9783)) nil (25164 46744 111961 700000) 0 nil])
([nil nil ((9781 . 9791) (#("un" 0 2 (fontified t face font-lock-comment-face)) . -9781) (undo-tree-id462 . -2) 9783) nil (25164 46744 111959 900000) 0 nil])
([nil nil ((10371 . 10387) (#("                " 0 16 (fontified nil)) . 10370) (undo-tree-id461 . -16) (10369 . 10387) (t 25164 39544 400589 600000)) nil (25164 46744 111956 500000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . 10371) (undo-tree-id459 . -16) (undo-tree-id460 . -16) 10387) nil (25164 46744 111953 100000) 0 nil])
([nil nil ((10371 . 10387)) nil (25164 46744 111949 700000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10383) (undo-tree-id458 . -4) 10387) nil (25164 46744 111947 600000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10379) (undo-tree-id457 . -4) 10383) nil (25164 46744 111943 900000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -10375) (undo-tree-id456 . -4) 10379) nil (25164 46744 111941 200000) 0 nil])
([nil nil ((10375 . 10385)) nil (25164 46744 111938 400000) 0 nil])
([nil nil ((10377 . 10395) (#("currentA" 0 8 (fontified t face font-lock-comment-face)) . -10377) (undo-tree-id455 . -8) 10385) nil (25164 46744 111936 600000) 0 nil])
([nil nil ((10395 . 10404)) nil (25164 46744 111933 600000) 0 nil])
([nil nil ((10970 . 10987) (t 25164 39555 910589 600000)) nil (25164 46744 111932 100000) 0 nil])
([nil nil ((10987 . 10988)) nil (25164 46744 111930 200000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -10983) (10971 . 10983) 10988) nil (25164 46744 111928 400000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -10979) (10971 . 10979) 10984) nil (25164 46744 111926 100000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -10975) (10971 . 10975) 10980) nil (25164 46744 111923 900000) 0 nil])
([nil nil ((10976 . 10997)) nil (25164 46744 111921 700000) 0 nil])
([nil nil ((10997 . 11003)) nil (25164 46744 111920 200000) 0 nil])
([nil nil ((#("

        # # assignments will always be valid for MAC because all values in all domains are conflict-free
        # if globalAgorithm == \"MAC\":
        #     globalBacktracks += 1" 0 1 (fontified t) 1 10 (fontified t) 10 12 (fontified t face font-lock-comment-delimiter-face) 12 23 (fontified t face font-lock-comment-face) 23 56 (fontified t face font-lock-comment-face) 56 82 (face font-lock-comment-face fontified t) 82 107 (face font-lock-comment-face fontified t) 107 115 (fontified t) 115 117 (fontified t face font-lock-comment-delimiter-face) 117 119 (fontified t face font-lock-comment-face) 119 145 (fontified t face font-lock-comment-face) 145 153 (fontified t) 153 159 (fontified t face font-lock-comment-delimiter-face) 159 180 (fontified t face font-lock-comment-face)) . 11448) (undo-tree-id453 . -180) (undo-tree-id454 . -180) (t 25164 39580 820589 600000)) nil (25164 46744 111918 200000) 0 nil])
([nil nil ((11448 . 11457) (t 25164 39602 450589 600000)) nil (25164 46744 111914 800000) 0 nil])
([nil nil ((11457 . 11478)) nil (25164 46744 111913 100000) 0 nil])
([nil nil ((11478 . 11499)) nil (25164 46744 111911 600000) 0 nil])
([nil nil ((11499 . 11506)) nil (25164 46744 111910 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -11503) (undo-tree-id450 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -11504) (undo-tree-id451 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -11505) (undo-tree-id452 . -1) 11506) nil (25164 46744 111907 700000) 0 nil])
([nil nil ((11503 . 11509)) nil (25164 46744 111902 600000) 0 nil])
([nil nil ((11509 . 11530)) nil (25164 46744 111901 400000) 0 nil])
([nil nil ((11530 . 11533)) nil (25164 46744 111899 900000) 0 nil])
([nil nil ((11533 . 11542)) nil (25164 46744 111898 500000) 0 nil])
([nil nil ((11542 . 11559)) nil (25164 46744 111897 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -11558) (undo-tree-id449 . -1) 11559) nil (25164 46744 111894 700000) 0 nil])
([nil nil ((11558 . 11566)) nil (25164 46744 111892 300000) 0 nil])
([nil nil ((11566 . 11587)) nil (25164 46744 111890 900000) 0 nil])
([nil nil ((11587 . 11608)) nil (25164 46744 111889 500000) 0 nil])
([nil nil ((11608 . 11610)) nil (25164 46744 111888 100000) 0 nil])
([nil nil ((#("
        # else:
            # globalBacktracks += 1" 0 1 (fontified t) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 17 (fontified t face font-lock-comment-face) 17 29 (fontified t) 29 31 (fontified t face font-lock-comment-delimiter-face) 31 52 (fontified t face font-lock-comment-face)) . 12302) (undo-tree-id447 . -52) (undo-tree-id448 . -52) (t 25164 39642 100589 600000)) nil (25164 46744 111886 300000) 0 nil])
([nil nil ((12281 . 12294)) nil (25164 46744 111882 900000) 0 nil])
([nil nil ((12294 . 12315)) nil (25164 46744 111881 400000) 0 nil])
([nil nil ((12315 . 12336)) nil (25164 46744 111879 800000) 0 nil])
([nil nil ((12336 . 12339)) nil (25164 46744 111878 200000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -12338) (undo-tree-id446 . -1) 12339) nil (25164 46744 111876 500000) 0 nil])
([nil nil ((12338 . 12344)) nil (25164 46744 111873 900000) 0 nil])
([nil nil ((12344 . 12365)) nil (25164 46744 111872 400000) 0 nil])
([nil nil ((12365 . 12374)) nil (25164 46744 111871 100000) 0 nil])
([nil nil ((#("
            continue" 0 1 (fontified t face font-lock-comment-face) 1 13 (fontified t) 13 17 (fontified t face font-lock-keyword-face) 17 21 (fontified t face font-lock-keyword-face)) . 12374) (undo-tree-id445 . -21) (t 25164 39662 90589 600000)) nil (25164 46744 111869 400000) 0 nil])
([nil nil ((apply -8 12835 13029 undo--wrap-and-run-primitive-undo 12835 13029 ((12981 . 12983) (12945 . 12947) (12910 . 12912) (12851 . 12853) 12881))) nil (25164 46744 111866 600000) 0 nil])
([nil nil ((12834 . 12851) (t 25164 39676 270589 600000)) nil (25164 46744 111864 700000) 0 nil])
([nil nil ((12851 . 12869)) nil (25164 46744 111862 900000) 0 nil])
([nil nil ((12869 . 12890)) nil (25164 46744 111861 500000) 0 nil])
([nil nil ((12890 . 12911)) nil (25164 46744 111859 900000) 0 nil])
([nil nil ((12911 . 12923)) nil (25164 46744 111858 400000) 0 nil])
([nil nil ((13541 . 13558) (t 25164 39691 60589 600000)) nil (25164 46744 111856 600000) 0 nil])
([nil nil ((13558 . 13579)) nil (25164 46744 111855 0) 0 nil])
([nil nil ((13579 . 13591)) nil (25164 46744 111853 600000) 0 nil])
([nil nil ((13696 . 13713)) nil (25164 46744 111852 200000) 0 nil])
([nil nil ((13713 . 13724)) nil (25164 46744 111851 0) 0 nil])
([nil nil ((13724 . 13736)) nil (25164 46744 111849 800000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -13734) (undo-tree-id443 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -13735) (undo-tree-id444 . -1) 13736) nil (25164 46744 111847 800000) 0 nil])
([nil nil ((13734 . 13755)) nil (25164 46744 111844 0) 0 nil])
([nil nil ((13755 . 13776)) nil (25164 46744 111842 400000) 0 nil])
([nil nil ((13776 . 13781)) nil (25164 46744 111840 900000) 0 nil])
([nil nil ((13781 . 13791)) nil (25164 46744 111839 500000) 0 nil])
([nil nil ((13791 . 13808)) nil (25164 46744 111838 100000) 0 nil])
([nil nil ((13808 . 13829)) nil (25164 46744 111836 600000) 0 nil])
([nil nil ((13829 . 13845)) nil (25164 46744 111835 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-comment-face)) . -13843) (undo-tree-id441 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -13844) (undo-tree-id442 . -1) 13845) nil (25164 46744 111832 400000) 0 nil])
([nil nil ((13843 . 13847)) nil (25164 46744 111828 500000) 0 nil])
([nil nil ((13847 . 13855)) nil (25164 46744 111826 900000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -13851) (undo-tree-id437 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -13852) (undo-tree-id438 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -13853) (undo-tree-id439 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -13854) (undo-tree-id440 . -1) 13855) nil (25164 46744 111824 500000) 0 nil])
([nil nil ((13851 . 13854)) nil (25164 46744 111817 800000) 0 nil])
([nil nil ((#("acheives" 0 8 (fontified nil face font-lock-comment-face)) . 13823) (undo-tree-id435 . -8) (undo-tree-id436 . -3) (13815 . 13823) 13823) nil (25164 46744 111816 0) 0 nil])
([nil nil ((13936 . 13953) (t 25164 39741 760589 600000)) nil (25164 46744 111812 200000) 0 nil])
([nil nil ((13953 . 13963)) nil (25164 46744 111810 600000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -13962) (undo-tree-id434 . -1) 13963) nil (25164 46744 111808 700000) 0 nil])
([nil nil ((13962 . 13983)) nil (25164 46744 111806 0) 0 nil])
([nil nil ((13983 . 13986)) nil (25164 46744 111804 500000) 0 nil])
([nil nil ((14065 . 14082) (t 25164 39753 640589 600000)) nil (25164 46744 111803 100000) 0 nil])
([nil nil ((14082 . 14101)) nil (25164 46744 111801 300000) 0 nil])
([nil nil ((14039 . 14056) (t 25164 39758 290589 600000)) nil (25164 46744 111799 700000) 0 nil])
([nil nil ((14056 . 14069)) nil (25164 46744 111797 700000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-comment-face)) . -14068) (undo-tree-id433 . -1) 14069) nil (25164 46744 111795 0) 0 nil])
([nil nil ((14068 . 14072)) nil (25164 46744 111777 700000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-comment-face)) . -14069) (undo-tree-id430 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -14070) (undo-tree-id431 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -14071) (undo-tree-id432 . -1) 14072) nil (25164 46744 111774 300000) 0 nil])
([nil nil ((14069 . 14072)) nil (25164 46744 111765 200000) 0 nil])
([nil nil ((14072 . 14082)) nil (25164 46744 111762 300000) 0 nil])
([nil nil ((#("
        # if nextDomainNotEmpty(domainsCopy, queensAssignedCopy) and not globalMaxSwitch and globalAgorithm == \"FOR\":" 0 1 (fontified t) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 24 (fontified t face font-lock-comment-face) 24 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-face) 66 69 (fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face) 70 73 (fontified t face font-lock-comment-face) 73 90 (fontified t face font-lock-comment-face) 90 93 (fontified t face font-lock-comment-face) 93 112 (fontified t face font-lock-comment-face) 112 117 (fontified t face font-lock-comment-face) 117 118 (fontified t face font-lock-comment-face)) . 14692) (undo-tree-id429 . -118) (t 25164 39767 170589 600000)) nil (25164 46744 111744 500000) 0 nil])
([nil nil ((14878 . 14891)) nil (25164 46744 111740 600000) 0 nil])
([nil nil ((14891 . 14901)) nil (25164 46744 111739 100000) 0 nil])
([nil nil ((14901 . 14922)) nil (25164 46744 111737 400000) 0 nil])
([nil nil ((14922 . 14943)) nil (25164 46744 111735 900000) 0 nil])
([nil nil ((14943 . 14956)) nil (25164 46744 111734 300000) 0 nil])
([nil nil ((#("
        # if not globalMaxSwitch and globalAgorithm == \"MAC\":
        #     # it's always a valid assignment for MAC (no condition here) because propagation leaves only valid assignments
        #     globalBacktracks += 1" 0 1 (fontified t face font-lock-comment-face) 1 9 (fontified t) 9 11 (fontified t face font-lock-comment-delimiter-face) 11 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 17 (fontified t face font-lock-comment-face) 17 22 (fontified t face font-lock-comment-face) 22 34 (fontified t face font-lock-comment-face) 34 37 (fontified t face font-lock-comment-face) 37 56 (fontified t face font-lock-comment-face) 56 61 (fontified t face font-lock-comment-face) 61 63 (fontified t face font-lock-comment-face) 63 67 (fontified t) 67 71 (fontified t) 71 73 (fontified t face font-lock-comment-delimiter-face) 73 77 (fontified t face font-lock-comment-delimiter-face) 77 79 (fontified t face font-lock-comment-face) 79 133 (fontified t face font-lock-comment-face) 133 136 (fontified t face font-lock-comment-face) 136 138 (fontified t face font-lock-comment-face) 138 188 (fontified t face font-lock-comment-face) 188 196 (fontified t) 196 198 (fontified t face font-lock-comment-delimiter-face) 198 202 (fontified t face font-lock-comment-delimiter-face) 202 218 (fontified t face font-lock-comment-face) 218 221 (fontified t face font-lock-comment-face) 221 223 (fontified t face font-lock-comment-face)) . 15138) (undo-tree-id427 . -223) (undo-tree-id428 . -223) (t 25164 39795 200589 600000)) nil (25164 46744 111713 0) 0 nil])
([nil nil ((15139 . 15152) (t 25164 39800 470589 600000)) nil (25164 46744 111709 400000) 0 nil])
([nil nil ((15152 . 15153)) nil (25164 46744 111707 600000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -15148) (15140 . 15148) 15153) nil (25164 46744 111705 700000) 0 nil])
([nil nil ((15149 . 15170)) nil (25164 46744 111703 800000) 0 nil])
([nil nil ((15170 . 15174)) nil (25164 46744 111702 300000) 0 nil])
([nil nil ((15174 . 15195)) nil (25164 46744 111700 900000) 0 nil])
([nil nil ((15195 . 15197)) nil (25164 46744 111699 500000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -15196) (undo-tree-id426 . -1) 15197) nil (25164 46744 111697 800000) 0 nil])
([nil nil ((15196 . 15208)) nil (25164 46744 111695 300000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -15206) (undo-tree-id424 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -15207) (undo-tree-id425 . -1) 15208) nil (25164 46744 111693 400000) 0 nil])
([nil nil ((15206 . 15211)) nil (25164 46744 111689 800000) 0 nil])
([nil nil ((#("assignment was successful so" 0 28 (fontified t face font-lock-comment-face)) . -15154) (undo-tree-id422 . -28) (undo-tree-id423 . -28) 15179 (t 25164 39816 860589 600000)) nil (25164 46744 111687 900000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -15150) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -15151) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -15152) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -15153) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 15154) nil (25164 46744 111682 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 15150)) nil (25164 46744 111671 300000) 0 nil])
([nil nil ((15998 . 15999) (t 25164 39824 80589 600000)) nil (25164 46744 111669 700000) 0 nil])
([nil nil ((15999 . 16020)) nil (25164 46744 111668 0) 0 nil])
([nil nil ((16020 . 16041)) nil (25164 46744 111666 300000) 0 nil])
([nil nil ((16041 . 16046)) nil (25164 46744 111665 0) 0 nil])
([nil nil ((16223 . 16224)) nil (25164 46744 111663 700000) 0 nil])
([nil nil ((16224 . 16230)) nil (25164 46744 111662 400000) 0 nil])
([nil nil ((16230 . 16243)) nil (25164 46744 111660 800000) 0 nil])
([nil nil ((15257 . 15266) (t 25164 39842 780589 600000)) nil (25164 46744 111659 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15262) (undo-tree-id413 . -4) 15266) nil (25164 46744 111657 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -15258) (undo-tree-id412 . -4) 15262) nil (25164 46744 111654 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15257) (undo-tree-id411 . -1) 15258) nil (25164 46744 111651 400000) 0 nil])
([nil nil ((15257 . 15260)) nil (25164 46744 111648 600000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -15257) (undo-tree-id408 . -1) (#("j" 0 1 (fontified t)) . -15258) (undo-tree-id409 . -1) (#(" " 0 1 (fontified t)) . -15259) (undo-tree-id410 . -1) 15260) nil (25164 46744 111646 300000) 0 nil])
([nil nil ((15257 . 15258)) nil (25164 46744 111641 100000) 0 nil])
([nil nil ((15256 . 15265)) nil (25164 46744 111639 600000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 15257) (undo-tree-id406 . -8) (undo-tree-id407 . -8) 15265) nil (25164 46744 111637 600000) 0 nil])
([nil nil ((15259 . 15272)) nil (25164 46744 111634 100000) 0 nil])
([nil nil ((15272 . 15291)) nil (25164 46744 111632 500000) 0 nil])
([nil nil ((2063 . 2064) (t 25164 39865 730589 600000)) nil (25164 46744 111630 900000) 0 nil])
([nil nil ((12376 . 12388) (t 25164 45886 440589 600000)) nil (25164 46744 111629 100000) 0 nil])
([nil nil ((12388 . 12396)) nil (25164 46744 111627 300000) 0 nil])
([nil nil ((7141 . 7150) (t 25164 45907 50589 600000)) nil (25164 46744 111625 700000) 0 nil])
([nil nil ((7150 . 7155)) nil (25164 46744 111623 700000) 0 nil])
([nil nil ((7156 . 7157) (7155 . 7157)) nil (25164 46815 969162 700000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 7156) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1)) ((7156 . 7157)) (25164 46817 151715 500000) 0 nil])
([nil nil ((7156 . 7158)) ((#("ar" 0 2 (fontified t)) . 7156) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2)) (25164 46817 518884 300000) 0 nil])
([nil nil ((7156 . 7164) (#("ar" 0 2 (fontified t)) . 7156) (undo-tree-id3443 . -2) (undo-tree-id3444 . -2) (undo-tree-id3445 . -2) (undo-tree-id3446 . -2) (undo-tree-id3447 . -2) (undo-tree-id3448 . -2) (undo-tree-id3449 . -2)) ((7156 . 7158) (#("arcQueue" 0 8 (fontified t)) . 7156)) (25164 46817 797924 400000) 0 nil])
([nil nil ((9109 . 9134) (t 25164 46821 440589 600000)) nil (25164 46907 995830 800000) 0 nil] [nil nil ((7893 . 7950) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7953) (undo-tree-id403 . -33) 7986 (t 25164 46003 720589 600000)) ((7953 . 8010) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7893) (undo-tree-id3405 . -33) (undo-tree-id3406 . -33) (undo-tree-id3407 . -57) (undo-tree-id3408 . -1) (undo-tree-id3409 . -4) (undo-tree-id3410 . -5) (undo-tree-id3411 . -8) (undo-tree-id3412 . -9) (undo-tree-id3413 . -33) (undo-tree-id3414 . -33) (undo-tree-id3415 . -33) (undo-tree-id3416 . -33) (undo-tree-id3417 . -33)) (25164 46814 37636 500000) 0 nil])
([nil nil ((9134 . 9139)) nil (25164 46907 995821 500000) 0 nil])
([nil nil ((7811 . 7868) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7893) (undo-tree-id402 . -33) 7926) ((7893 . 7950) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7811) (undo-tree-id3387 . -33) (undo-tree-id3388 . -33) (undo-tree-id3389 . -57) (undo-tree-id3390 . -1) (undo-tree-id3391 . -4) (undo-tree-id3392 . -5) (undo-tree-id3393 . -8) (undo-tree-id3394 . -9) (undo-tree-id3395 . -33) (undo-tree-id3396 . -33) (undo-tree-id3397 . -33) (undo-tree-id3398 . -33) (undo-tree-id3399 . -33) (undo-tree-id3400 . -33) (undo-tree-id3401 . -33) (undo-tree-id3402 . -33) (undo-tree-id3403 . -33) (undo-tree-id3404 . -33)) (25164 46813 349460 600000) 0 nil])
([nil nil ((#("                        " 0 24 (fontified nil)) . -9130) (undo-tree-id3459 . -1) (undo-tree-id3460 . -4) (undo-tree-id3461 . -5) (undo-tree-id3462 . -8) (undo-tree-id3463 . -9) (undo-tree-id3464 . -12) (undo-tree-id3465 . -13) (undo-tree-id3466 . -16) (undo-tree-id3467 . -17) (undo-tree-id3468 . -20) (undo-tree-id3469 . -21) (9110 . 9130) 9139 (t 25164 46908 30589 600000)) nil (25164 46928 585834 500000) 0 nil])
([nil nil ((7755 . 7812) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7811) (undo-tree-id401 . -33) 7844) ((7811 . 7868) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7755) (undo-tree-id3369 . -33) (undo-tree-id3370 . -33) (undo-tree-id3371 . -57) (undo-tree-id3372 . -1) (undo-tree-id3373 . -4) (undo-tree-id3374 . -5) (undo-tree-id3375 . -8) (undo-tree-id3376 . -9) (undo-tree-id3377 . -33) (undo-tree-id3378 . -33) (undo-tree-id3379 . -33) (undo-tree-id3380 . -33) (undo-tree-id3381 . -33) (undo-tree-id3382 . -33) (undo-tree-id3383 . -33) (undo-tree-id3384 . -33) (undo-tree-id3385 . -33) (undo-tree-id3386 . -33)) (25164 46812 100387 300000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified nil)) . -9126) (undo-tree-id3450 . -1) (undo-tree-id3451 . -4) (undo-tree-id3452 . -5) (undo-tree-id3453 . -8) (undo-tree-id3454 . -9) (undo-tree-id3455 . -12) (undo-tree-id3456 . -13) (undo-tree-id3457 . -16) (undo-tree-id3458 . -17) (9110 . 9126) 9135) nil (25164 46928 585817 500000) 0 nil])
([nil nil ((7696 . 7753) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7755) (undo-tree-id400 . -33) 7788) ((7755 . 7812) (#("            alteredQueenDomainHasSatisfyingValue = False
" 0 12 (fontified t) 12 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 41 (fontified t face font-lock-variable-name-face) 41 45 (fontified t face font-lock-variable-name-face) 45 48 (fontified t face font-lock-variable-name-face) 48 49 (fontified t) 49 51 (fontified t) 51 56 (fontified t face font-lock-constant-face) 56 57 (fontified t)) . 7696) (undo-tree-id3250 . -51) (undo-tree-id3251 . -33) (undo-tree-id3252 . -33) (undo-tree-id3253 . -30) (undo-tree-id3254 . -30) (undo-tree-id3255 . -30) (undo-tree-id3256 . -30) (undo-tree-id3257 . -30) (undo-tree-id3258 . -30) (undo-tree-id3259 . -30) (undo-tree-id3260 . -30) (undo-tree-id3261 . -30) (undo-tree-id3262 . -30) (undo-tree-id3263 . -30) (undo-tree-id3264 . -30) (undo-tree-id3265 . -30) (undo-tree-id3266 . -30) (undo-tree-id3267 . -30) (undo-tree-id3268 . -30) (undo-tree-id3269 . -30) (undo-tree-id3270 . -30) (undo-tree-id3271 . -30) (undo-tree-id3272 . -30) (undo-tree-id3273 . -30) (undo-tree-id3274 . -30) (undo-tree-id3275 . -30) (undo-tree-id3276 . -30) (undo-tree-id3277 . -30) (undo-tree-id3278 . -30) (undo-tree-id3279 . -30) (undo-tree-id3280 . -30) (undo-tree-id3281 . -30) (undo-tree-id3282 . -30) (undo-tree-id3283 . -30) (undo-tree-id3284 . -30) (undo-tree-id3285 . -30) (undo-tree-id3286 . -30) (undo-tree-id3287 . -30) (undo-tree-id3288 . -30) (undo-tree-id3289 . -30) (undo-tree-id3290 . -30) (undo-tree-id3291 . -30) (undo-tree-id3292 . -30) (undo-tree-id3293 . -30) (undo-tree-id3294 . -30) (undo-tree-id3295 . -30) (undo-tree-id3296 . -30) (undo-tree-id3297 . -30) (undo-tree-id3298 . -30) (undo-tree-id3299 . -30) (undo-tree-id3300 . -30) (undo-tree-id3301 . -30) (undo-tree-id3302 . -30) (undo-tree-id3303 . -51) (undo-tree-id3304 . -30) (undo-tree-id3305 . -30) (undo-tree-id3306 . -30) (undo-tree-id3307 . -30) (undo-tree-id3308 . -30) (undo-tree-id3309 . -30) (undo-tree-id3310 . -30) (undo-tree-id3311 . -30) (undo-tree-id3312 . -30) (undo-tree-id3313 . -30) (undo-tree-id3314 . -51) (undo-tree-id3315 . -30) (undo-tree-id3316 . -30) (undo-tree-id3317 . -30) (undo-tree-id3318 . -30) (undo-tree-id3319 . -30) (undo-tree-id3320 . -30) (undo-tree-id3321 . -30) (undo-tree-id3322 . -30) (undo-tree-id3323 . -30) (undo-tree-id3324 . -30) (undo-tree-id3325 . -51) (undo-tree-id3326 . -51) (undo-tree-id3327 . -51) (undo-tree-id3328 . -51) (undo-tree-id3329 . -51) (undo-tree-id3330 . -56) (undo-tree-id3331 . -56) (undo-tree-id3332 . -56) (undo-tree-id3333 . -56) (undo-tree-id3334 . -56) (undo-tree-id3335 . -33) (undo-tree-id3336 . -33) (undo-tree-id3337 . -33) (undo-tree-id3338 . -33) (undo-tree-id3339 . -33) (undo-tree-id3340 . -33) (undo-tree-id3341 . -57) (undo-tree-id3342 . -1) (undo-tree-id3343 . -4) (undo-tree-id3344 . -5) (undo-tree-id3345 . -8) (undo-tree-id3346 . -9) (undo-tree-id3347 . -33) (undo-tree-id3348 . -33) (undo-tree-id3349 . -33) (undo-tree-id3350 . -33) (undo-tree-id3351 . -33) (undo-tree-id3352 . -33) (undo-tree-id3353 . -33) (undo-tree-id3354 . -33) (undo-tree-id3355 . -33) (undo-tree-id3356 . -33) (undo-tree-id3357 . -33) (undo-tree-id3358 . -33) (undo-tree-id3359 . -33) (undo-tree-id3360 . -33) (undo-tree-id3361 . -33) (undo-tree-id3362 . -12) (undo-tree-id3363 . -48) (undo-tree-id3364 . -33) (undo-tree-id3365 . -33) (undo-tree-id3366 . -33) (undo-tree-id3367 . -33) (undo-tree-id3368 . -33)) (25164 46810 651818 500000) 0 nil])
([nil nil ((#("                break" 0 16 (fontified t) 16 21 (fontified t face font-lock-keyword-face)) . 9110) (undo-tree-id4809 . -21) (undo-tree-id4810 . -21) (undo-tree-id4811 . -21) (undo-tree-id4812 . -21) (undo-tree-id4813 . -21) (undo-tree-id4814 . -21) (undo-tree-id4815 . -21) (undo-tree-id4816 . -21) (undo-tree-id4817 . -21) (undo-tree-id4818 . -21) (undo-tree-id4819 . -21) (undo-tree-id4820 . -21) (undo-tree-id4821 . -21) (undo-tree-id4822 . -21) (undo-tree-id4823 . -21) (undo-tree-id4824 . -21) (undo-tree-id4825 . -21) (undo-tree-id4826 . -21) (undo-tree-id4827 . -21) (undo-tree-id4828 . -21) (undo-tree-id4829 . -21) (undo-tree-id4830 . -21) (undo-tree-id4831 . -21) (undo-tree-id4832 . -21) (undo-tree-id4833 . -1) (undo-tree-id4834 . -4) (undo-tree-id4835 . -5) (undo-tree-id4836 . -8) (undo-tree-id4837 . -9) (undo-tree-id4838 . -12) (undo-tree-id4839 . -13) (undo-tree-id4840 . -21) (undo-tree-id4841 . -21) (undo-tree-id4842 . -21) (undo-tree-id4843 . -21) (undo-tree-id4844 . -21) (undo-tree-id4845 . -21) (undo-tree-id4846 . -21) (undo-tree-id4847 . -21) (undo-tree-id4848 . -21) (undo-tree-id4849 . -21) (undo-tree-id4850 . -21) (undo-tree-id4851 . -21) (undo-tree-id4852 . -21) (undo-tree-id4853 . -21) (undo-tree-id4854 . -21) (undo-tree-id4855 . -21) (undo-tree-id4856 . -21) (undo-tree-id4857 . -21) (undo-tree-id4858 . -21) (undo-tree-id4859 . -21) (undo-tree-id4860 . -21) (undo-tree-id4861 . -21) (undo-tree-id4862 . -21) (undo-tree-id4863 . -21) 9131 (t 25164 46928 600589 600000)) nil (25164 47043 481043 500000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -7704) (7696 . 7704) 7729) ((#("        " 0 8 (fontified nil)) . 7696) (undo-tree-id3241 . -8) (undo-tree-id3242 . -8) (undo-tree-id3243 . -8) (undo-tree-id3244 . -8) (undo-tree-id3245 . -8) (undo-tree-id3246 . -1) (undo-tree-id3247 . -4) (undo-tree-id3248 . -5) (undo-tree-id3249 . -8) (7704 . 7716)) (25164 46810 192392 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9109) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) 9110) nil (25164 47043 480984 700000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -8516) (8508 . 8516) 8536) ((#("        " 0 8 (fontified nil)) . 8508) (undo-tree-id3232 . -8) (undo-tree-id3233 . -8) (undo-tree-id3234 . -8) (undo-tree-id3235 . -8) (undo-tree-id3236 . -8) (undo-tree-id3237 . -1) (undo-tree-id3238 . -4) (undo-tree-id3239 . -5) (undo-tree-id3240 . -8) (8516 . 8528)) (25164 46809 756967 500000) 0 nil])
([nil nil ((7754 . 7763)) nil (25164 47043 480906 100000) 0 nil])
([nil nil ((#("                        " 0 24 (fontified nil)) . -9028) (9008 . 9028) (#("                    " 0 20 (fontified nil)) . -8948) (8932 . 8948) (#("                    " 0 20 (fontified nil)) . -8817) (8801 . 8817) (#("                " 0 16 (fontified nil)) . -8734) (8722 . 8734) (#("                " 0 16 (fontified nil)) . -8687) (8675 . 8687) (#("                " 0 16 (fontified nil)) . -8619) (8607 . 8619) (#("                " 0 16 (fontified nil)) . -8573) (8561 . 8573) 9073) ((#("            " 0 12 (fontified nil)) . 8561) (undo-tree-id3176 . -1) (undo-tree-id3177 . -4) (undo-tree-id3178 . -5) (undo-tree-id3179 . -8) (undo-tree-id3180 . -9) (undo-tree-id3181 . -12) (8573 . 8589) (#("            " 0 12 (fontified nil)) . 8607) (undo-tree-id3182 . -1) (undo-tree-id3183 . -4) (undo-tree-id3184 . -5) (undo-tree-id3185 . -8) (undo-tree-id3186 . -9) (undo-tree-id3187 . -12) (8619 . 8635) (#("            " 0 12 (fontified nil)) . 8675) (undo-tree-id3188 . -1) (undo-tree-id3189 . -4) (undo-tree-id3190 . -5) (undo-tree-id3191 . -8) (undo-tree-id3192 . -9) (undo-tree-id3193 . -12) (8687 . 8703) (#("            " 0 12 (fontified nil)) . 8722) (undo-tree-id3194 . -1) (undo-tree-id3195 . -4) (undo-tree-id3196 . -5) (undo-tree-id3197 . -8) (undo-tree-id3198 . -9) (undo-tree-id3199 . -12) (8734 . 8750) (#("                " 0 16 (fontified nil)) . 8801) (undo-tree-id3200 . -1) (undo-tree-id3201 . -4) (undo-tree-id3202 . -5) (undo-tree-id3203 . -8) (undo-tree-id3204 . -9) (undo-tree-id3205 . -12) (undo-tree-id3206 . -13) (undo-tree-id3207 . -16) (8817 . 8837) (#("                " 0 16 (fontified nil)) . 8932) (undo-tree-id3208 . -1) (undo-tree-id3209 . -4) (undo-tree-id3210 . -5) (undo-tree-id3211 . -8) (undo-tree-id3212 . -9) (undo-tree-id3213 . -12) (undo-tree-id3214 . -13) (undo-tree-id3215 . -16) (8948 . 8968) (#("                    " 0 20 (fontified nil)) . 9008) (undo-tree-id3216 . -20) (undo-tree-id3217 . -20) (undo-tree-id3218 . -20) (undo-tree-id3219 . -20) (undo-tree-id3220 . -20) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -4) (undo-tree-id3224 . -5) (undo-tree-id3225 . -8) (undo-tree-id3226 . -9) (undo-tree-id3227 . -12) (undo-tree-id3228 . -13) (undo-tree-id3229 . -16) (undo-tree-id3230 . -17) (undo-tree-id3231 . -20) (9028 . 9052)) (25164 46809 285157 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7759) (undo-tree-id4707 . -4) (undo-tree-id4708 . -1) (undo-tree-id4709 . -4) (undo-tree-id4710 . -4) (undo-tree-id4711 . -4) (undo-tree-id4712 . -4) (undo-tree-id4713 . -4) (undo-tree-id4714 . -4) (undo-tree-id4715 . -4) (undo-tree-id4716 . -4) (undo-tree-id4717 . -4) (undo-tree-id4718 . -4) (undo-tree-id4719 . -4) (undo-tree-id4720 . -4) (undo-tree-id4721 . -4) (undo-tree-id4722 . -4) (undo-tree-id4723 . -4) (undo-tree-id4724 . -4) (undo-tree-id4725 . -4) (undo-tree-id4726 . -4) (undo-tree-id4727 . -4) (undo-tree-id4728 . -4) (undo-tree-id4729 . -4) (undo-tree-id4730 . -4) (undo-tree-id4731 . -4) (undo-tree-id4732 . -4) (undo-tree-id4733 . -4) 7763) nil (25164 47043 480902 600000) 0 nil])
([nil nil ((8507 . 8528) (t 25164 46188 520589 600000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8507) (undo-tree-id3078 . -21) (undo-tree-id3079 . -21) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -2) (undo-tree-id3163 . -5) (undo-tree-id3164 . -6) (undo-tree-id3165 . -9) (undo-tree-id3166 . -10) (undo-tree-id3167 . -13) (undo-tree-id3168 . -14) (undo-tree-id3169 . -17) (undo-tree-id3170 . -18) (undo-tree-id3171 . -21) (undo-tree-id3172 . -21) (undo-tree-id3173 . -21) (undo-tree-id3174 . -21) (undo-tree-id3175 . -21)) (25164 46808 812164 100000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7755) (undo-tree-id4671 . -4) (undo-tree-id4672 . -4) (undo-tree-id4673 . -4) (undo-tree-id4674 . -4) (undo-tree-id4675 . -4) (undo-tree-id4676 . -4) (undo-tree-id4677 . -4) (undo-tree-id4678 . -4) (undo-tree-id4679 . -4) (undo-tree-id4680 . -4) (undo-tree-id4681 . -4) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (undo-tree-id4684 . -4) (undo-tree-id4685 . -4) (undo-tree-id4686 . -4) (undo-tree-id4687 . -4) (undo-tree-id4688 . -1) (undo-tree-id4689 . -4) (undo-tree-id4690 . -4) (undo-tree-id4691 . -4) (undo-tree-id4692 . -4) (undo-tree-id4693 . -4) (undo-tree-id4694 . -4) (undo-tree-id4695 . -4) (undo-tree-id4696 . -4) (undo-tree-id4697 . -1) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -4) (undo-tree-id4704 . -4) (undo-tree-id4705 . -4) (undo-tree-id4706 . -4) 7759) nil (25164 47043 480873 200000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . 8508) (undo-tree-id398 . -20) (undo-tree-id399 . -20) 8528) ((8508 . 8528)) (25164 46807 909377 800000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -7754) (undo-tree-id4626 . -1) (undo-tree-id4627 . 1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) 7755) nil (25164 47043 480834 200000) 0 nil])
([nil nil ((8608 . 8655) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8676) (undo-tree-id397 . -38) 8714 (t 25164 46199 100589 600000)) ((8676 . 8723) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8608) (undo-tree-id3065 . -38) (undo-tree-id3066 . -38) (undo-tree-id3067 . -47) (undo-tree-id3068 . -1) (undo-tree-id3069 . -4) (undo-tree-id3070 . -5) (undo-tree-id3071 . -8) (undo-tree-id3072 . -9) (undo-tree-id3073 . -38) (undo-tree-id3074 . -38) (undo-tree-id3075 . -38) (undo-tree-id3076 . -38) (undo-tree-id3077 . -38)) (25164 46807 638300 500000) 0 nil])
([nil nil ((7697 . 7705) (#("        " 0 8 (fontified nil)) . 7696) (undo-tree-id4615 . -8) (undo-tree-id4616 . -8) (undo-tree-id4617 . -8) (undo-tree-id4618 . -8) (undo-tree-id4619 . -8) (undo-tree-id4620 . -8) (undo-tree-id4621 . -8) (undo-tree-id4622 . -8) (undo-tree-id4623 . -1) (undo-tree-id4624 . -4) (undo-tree-id4625 . -5) (7695 . 7705)) nil (25164 47043 480785 600000) 0 nil])
([nil nil ((8562 . 8609) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8608) (undo-tree-id396 . -38) 8646) ((8608 . 8655) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8562) (undo-tree-id3052 . -38) (undo-tree-id3053 . -38) (undo-tree-id3054 . -47) (undo-tree-id3055 . -1) (undo-tree-id3056 . -4) (undo-tree-id3057 . -5) (undo-tree-id3058 . -8) (undo-tree-id3059 . -9) (undo-tree-id3060 . -38) (undo-tree-id3061 . -38) (undo-tree-id3062 . -38) (undo-tree-id3063 . -38) (undo-tree-id3064 . -38)) (25164 46807 420582 900000) 0 nil])
([nil nil ((7696 . 7704)) nil (25164 47043 480773 200000) 0 nil])
([nil nil ((8509 . 8556) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8562) (undo-tree-id395 . -38) 8600) ((8562 . 8609) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8509) (undo-tree-id3039 . -38) (undo-tree-id3040 . -38) (undo-tree-id3041 . -47) (undo-tree-id3042 . -1) (undo-tree-id3043 . -4) (undo-tree-id3044 . -5) (undo-tree-id3045 . -8) (undo-tree-id3046 . -9) (undo-tree-id3047 . -38) (undo-tree-id3048 . -38) (undo-tree-id3049 . -38) (undo-tree-id3050 . -38) (undo-tree-id3051 . -38)) (25164 46807 196304 100000) 0 nil])
([nil nil ((7704 . 7725)) nil (25164 47043 480771 500000) 0 nil])
([nil nil ((8508 . 8555) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8509) (undo-tree-id394 . -38) 8547) ((8509 . 8556) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 27 (fontified t) 27 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8508) (undo-tree-id2971 . -38) (undo-tree-id2972 . -38) (undo-tree-id2973 . -27) (undo-tree-id2974 . -27) (undo-tree-id2975 . -27) (undo-tree-id2976 . -27) (undo-tree-id2977 . -27) (undo-tree-id2978 . -27) (undo-tree-id2979 . -27) (undo-tree-id2980 . -27) (undo-tree-id2981 . -27) (undo-tree-id2982 . -27) (undo-tree-id2983 . -27) (undo-tree-id2984 . -27) (undo-tree-id2985 . -27) (undo-tree-id2986 . -27) (undo-tree-id2987 . -27) (undo-tree-id2988 . -27) (undo-tree-id2989 . -27) (undo-tree-id2990 . -27) (undo-tree-id2991 . -27) (undo-tree-id2992 . -27) (undo-tree-id2993 . -27) (undo-tree-id2994 . -27) (undo-tree-id2995 . -27) (undo-tree-id2996 . -27) (undo-tree-id2997 . -27) (undo-tree-id2998 . -27) (undo-tree-id2999 . -27) (undo-tree-id3000 . -27) (undo-tree-id3001 . -27) (undo-tree-id3002 . -27) (undo-tree-id3003 . -27) (undo-tree-id3004 . -27) (undo-tree-id3005 . -27) (undo-tree-id3006 . -27) (undo-tree-id3007 . -27) (undo-tree-id3008 . -33) (undo-tree-id3009 . -33) (undo-tree-id3010 . -33) (undo-tree-id3011 . -33) (undo-tree-id3012 . -33) (undo-tree-id3013 . -33) (undo-tree-id3014 . -33) (undo-tree-id3015 . -33) (undo-tree-id3016 . -33) (undo-tree-id3017 . -33) (undo-tree-id3018 . -33) (undo-tree-id3019 . -33) (undo-tree-id3020 . -33) (undo-tree-id3021 . -33) (undo-tree-id3022 . -33) (undo-tree-id3023 . -47) (undo-tree-id3024 . -38) (undo-tree-id3025 . -38) (undo-tree-id3026 . -38) (undo-tree-id3027 . -38) (undo-tree-id3028 . -38) (undo-tree-id3029 . -1) (undo-tree-id3030 . -4) (undo-tree-id3031 . -5) (undo-tree-id3032 . -8) (undo-tree-id3033 . -9) (undo-tree-id3034 . -38) (undo-tree-id3035 . -38) (undo-tree-id3036 . -38) (undo-tree-id3037 . -38) (undo-tree-id3038 . -38)) (25164 46806 969313 0) 0 nil])
([nil nil ((7725 . 7736)) nil (25164 47043 480769 800000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -8524) (8508 . 8524) 8546) ((#("                " 0 16 (fontified nil)) . 8508) (undo-tree-id2963 . -1) (undo-tree-id2964 . -4) (undo-tree-id2965 . -5) (undo-tree-id2966 . -8) (undo-tree-id2967 . -9) (undo-tree-id2968 . -12) (undo-tree-id2969 . -13) (undo-tree-id2970 . -16) (8524 . 8536)) (25164 46806 720533 300000) 0 nil])
([nil nil ((7736 . 7757)) nil (25164 47043 480768 200000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -8528) (8508 . 8528) 8550) ((#("                    " 0 20 (fontified nil)) . 8508) (undo-tree-id2943 . -20) (undo-tree-id2944 . -20) (undo-tree-id2945 . -20) (undo-tree-id2946 . -20) (undo-tree-id2947 . -20) (undo-tree-id2948 . -20) (undo-tree-id2949 . -20) (undo-tree-id2950 . -20) (undo-tree-id2951 . -20) (undo-tree-id2952 . -20) (undo-tree-id2953 . -1) (undo-tree-id2954 . -4) (undo-tree-id2955 . -5) (undo-tree-id2956 . -8) (undo-tree-id2957 . -9) (undo-tree-id2958 . -12) (undo-tree-id2959 . -13) (undo-tree-id2960 . -16) (undo-tree-id2961 . -17) (undo-tree-id2962 . -20) (8528 . 8544)) (25164 46806 458693 0) 0 nil])
([nil nil ((7757 . 7764)) nil (25164 47043 480766 500000) 0 nil])
([nil nil ((8507 . 8528) (t 25164 46230 220589 600000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8507) (undo-tree-id2921 . -21) (undo-tree-id2922 . -21) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -2) (undo-tree-id2930 . -5) (undo-tree-id2931 . -6) (undo-tree-id2932 . -9) (undo-tree-id2933 . -10) (undo-tree-id2934 . -13) (undo-tree-id2935 . -14) (undo-tree-id2936 . -17) (undo-tree-id2937 . -18) (undo-tree-id2938 . -21) (undo-tree-id2939 . -21) (undo-tree-id2940 . -21) (undo-tree-id2941 . -21) (undo-tree-id2942 . -21)) (25164 46806 199312 0) 0 nil])
([nil nil ((7764 . 7773)) nil (25164 47043 480764 800000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . 8508) (undo-tree-id392 . -20) (undo-tree-id393 . -20) 8528) ((8508 . 8528)) (25164 46805 748195 800000) 0 nil])
([nil nil ((7773 . 7787)) nil (25164 47043 480763 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8507) (undo-tree-id390 . -1) (undo-tree-id391 . -1) 8508) ((8507 . 8508)) (25164 46805 388976 400000) 0 nil])
([nil nil ((7790 . 7791) (7789 . 7791) (#("'" 0 1 (fontified nil)) . -7789) (7787 . 7790)) nil (25164 47043 480761 400000) 0 nil])
([nil nil ((8507 . 8528)) ((#("
                    " 0 1 (fontified t) 1 17 (fontified t) 17 21 (fontified t)) . 8507) (undo-tree-id2859 . -21) (undo-tree-id2860 . -21) (undo-tree-id2861 . -17) (undo-tree-id2862 . -17) (undo-tree-id2863 . -17) (undo-tree-id2864 . -17) (undo-tree-id2865 . -17) (undo-tree-id2866 . -21) (undo-tree-id2867 . -21) (undo-tree-id2868 . -21) (undo-tree-id2869 . -21) (undo-tree-id2870 . -21) (undo-tree-id2871 . -21) (undo-tree-id2872 . -21) (undo-tree-id2873 . -21) (undo-tree-id2874 . -21) (undo-tree-id2875 . -21) (undo-tree-id2876 . -21) (undo-tree-id2877 . -21) (undo-tree-id2878 . -21) (undo-tree-id2879 . -21) (undo-tree-id2880 . -21) (undo-tree-id2881 . -21) (undo-tree-id2882 . -21) (undo-tree-id2883 . -21) (undo-tree-id2884 . -21) (undo-tree-id2885 . -21) (undo-tree-id2886 . -21) (undo-tree-id2887 . -21) (undo-tree-id2888 . -21) (undo-tree-id2889 . -21) (undo-tree-id2890 . -21) (undo-tree-id2891 . -21) (undo-tree-id2892 . -21) (undo-tree-id2893 . -21) (undo-tree-id2894 . -21) (undo-tree-id2895 . -21) (undo-tree-id2896 . -21) (undo-tree-id2897 . -21) (undo-tree-id2898 . -21) (undo-tree-id2899 . -21) (undo-tree-id2900 . -21) (undo-tree-id2901 . -21) (undo-tree-id2902 . -21) (undo-tree-id2903 . -21) (undo-tree-id2904 . -21) (undo-tree-id2905 . -21) (undo-tree-id2906 . -1) (undo-tree-id2907 . -2) (undo-tree-id2908 . -5) (undo-tree-id2909 . -6) (undo-tree-id2910 . -9) (undo-tree-id2911 . -10) (undo-tree-id2912 . -13) (undo-tree-id2913 . -14) (undo-tree-id2914 . -17) (undo-tree-id2915 . -18) (undo-tree-id2916 . -21) (undo-tree-id2917 . -21) (undo-tree-id2918 . -21) (undo-tree-id2919 . -21) (undo-tree-id2920 . -21)) (25164 46805 38368 900000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -7790) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) 7791) nil (25164 47043 480757 500000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -8524) (8528 . 8533)) ((#("else:" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil)) . 8528) (undo-tree-id2817 . -5) (undo-tree-id2818 . -5) (undo-tree-id2819 . -5) (undo-tree-id2820 . -5) (undo-tree-id2821 . -5) (undo-tree-id2822 . -5) (undo-tree-id2823 . -5) (undo-tree-id2824 . -5) (undo-tree-id2825 . -5) (undo-tree-id2826 . -5) (undo-tree-id2827 . -5) (undo-tree-id2828 . -5) (undo-tree-id2829 . -5) (undo-tree-id2830 . -5) (undo-tree-id2831 . -5) (undo-tree-id2832 . -5) (undo-tree-id2833 . -5) (undo-tree-id2834 . -5) (undo-tree-id2835 . -5) (undo-tree-id2836 . -5) (undo-tree-id2837 . -5) (undo-tree-id2838 . -5) (undo-tree-id2839 . -5) (undo-tree-id2840 . -5) (undo-tree-id2841 . -5) (undo-tree-id2842 . -5) (undo-tree-id2843 . -5) (undo-tree-id2844 . -5) (undo-tree-id2845 . -5) (undo-tree-id2846 . -5) (undo-tree-id2847 . -5) (undo-tree-id2848 . -5) (undo-tree-id2849 . -5) (undo-tree-id2850 . -5) (undo-tree-id2851 . -5) (undo-tree-id2852 . -5) (undo-tree-id2853 . -5) (undo-tree-id2854 . -5) (undo-tree-id2855 . -5) (undo-tree-id2856 . -5) (undo-tree-id2857 . -5) (undo-tree-id2858 . -5) (8524 . 8528)) (25164 46804 631716 400000) 0 nil])
([nil nil ((#("'" 0 1 (fontified nil face font-lock-string-face)) . -7789) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . 7790)) nil (25164 47043 480728 500000) 0 nil])
([nil nil ((8529 . 8550)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8529) (undo-tree-id2775 . -21) (undo-tree-id2776 . -21) (undo-tree-id2777 . -21) (undo-tree-id2778 . -21) (undo-tree-id2779 . -21) (undo-tree-id2780 . -21) (undo-tree-id2781 . -21) (undo-tree-id2782 . -21) (undo-tree-id2783 . -21) (undo-tree-id2784 . -21) (undo-tree-id2785 . -21) (undo-tree-id2786 . -21) (undo-tree-id2787 . -21) (undo-tree-id2788 . -21) (undo-tree-id2789 . -21) (undo-tree-id2790 . -21) (undo-tree-id2791 . -21) (undo-tree-id2792 . -21) (undo-tree-id2793 . -21) (undo-tree-id2794 . -21) (undo-tree-id2795 . -21) (undo-tree-id2796 . -21) (undo-tree-id2797 . -1) (undo-tree-id2798 . -2) (undo-tree-id2799 . -5) (undo-tree-id2800 . -6) (undo-tree-id2801 . -9) (undo-tree-id2802 . -10) (undo-tree-id2803 . -13) (undo-tree-id2804 . -14) (undo-tree-id2805 . -17) (undo-tree-id2806 . -18) (undo-tree-id2807 . -21) (undo-tree-id2808 . -21) (undo-tree-id2809 . -21) (undo-tree-id2810 . -21) (undo-tree-id2811 . -21) (undo-tree-id2812 . -21) (undo-tree-id2813 . -21) (undo-tree-id2814 . -21) (undo-tree-id2815 . -21) (undo-tree-id2816 . -21)) (25164 46804 115469 600000) 0 nil])
([nil nil ((7789 . 7803)) nil (25164 47043 480683 900000) 0 nil])
([nil nil ((8550 . 8571)) ((#("# need to remove the " 0 2 (fontified t face font-lock-comment-delimiter-face) 2 21 (fontified t face font-lock-comment-face)) . 8550) (undo-tree-id2758 . -21) (undo-tree-id2759 . -21) (undo-tree-id2760 . -21) (undo-tree-id2761 . -21) (undo-tree-id2762 . -21) (undo-tree-id2763 . -21) (undo-tree-id2764 . -21) (undo-tree-id2765 . -21) (undo-tree-id2766 . -21) (undo-tree-id2767 . -21) (undo-tree-id2768 . -21) (undo-tree-id2769 . -21) (undo-tree-id2770 . -21) (undo-tree-id2771 . -21) (undo-tree-id2772 . -21) (undo-tree-id2773 . -21) (undo-tree-id2774 . -21)) (25164 46803 489562 500000) 0 nil])
([nil nil ((7927 . 7940)) nil (25164 47043 480682 100000) 0 nil])
([nil nil ((8571 . 8588)) ((#("unsatisfied value" 0 17 (fontified t face font-lock-comment-face)) . 8571)) (25164 46802 857165 800000) 0 nil])
([nil nil ((7940 . 7943)) nil (25164 47043 480680 300000) 0 nil])
([nil nil ((#("remove" 0 6 (fontified t)) . -8624) (undo-tree-id388 . -6) (undo-tree-id389 . -6) 8630 (t 25164 46256 540589 600000)) ((8624 . 8630)) (25164 46802 491620 700000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -7940) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -7941) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (#(" " 0 1 (fontified t)) . -7942) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) 7943) nil (25164 47043 480672 100000) 0 nil])
([nil nil ((8624 . 8631)) ((#("discard" 0 7 (fontified t)) . 8624) (undo-tree-id2751 . -7) (undo-tree-id2752 . -7) (undo-tree-id2753 . -7) (undo-tree-id2754 . -7) (undo-tree-id2755 . -7) (undo-tree-id2756 . -7) (undo-tree-id2757 . -7)) (25164 46802 199799 100000) 0 nil])
([nil nil ((7940 . 7961)) nil (25164 47043 480545 500000) 0 nil])
([nil nil ((#("discard" 0 7 (fontified t)) . -8624) (undo-tree-id384 . -7) (undo-tree-id385 . -7) (undo-tree-id386 . -7) (undo-tree-id387 . -7) 8631 (t 25164 46338 860589 600000)) ((8624 . 8631)) (25164 46801 925909 600000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -7960) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) 7961) nil (25164 47043 480542 0) 0 nil])
([nil nil ((8624 . 8630)) ((#("remove" 0 6 (fontified t)) . 8624)) (25164 46801 636190 800000) 0 nil])
([nil nil ((7960 . 7968)) nil (25164 47043 480509 900000) 0 nil])
([nil nil ((#("remove" 0 6 (fontified t)) . 8624) (undo-tree-id383 . -6)) ((8624 . 8630)) (25164 46801 395528 500000) 0 nil])
([nil nil ((7968 . 7989)) nil (25164 47043 480507 700000) 0 nil])
([nil nil ((8624 . 8631)) ((#("discard" 0 7 (fontified t)) . 8624)) (25164 46801 135889 400000) 0 nil])
([nil nil ((7989 . 8001)) nil (25164 47043 480505 300000) 0 nil])
([nil nil ((#("discard" 0 7 (fontified t)) . 8624) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (t 25164 46338 860589 600000)) ((8624 . 8631)) (25164 46800 899282 600000) 0 nil])
([nil nil ((#("
            # break out of this loop if neighborNeighbors have been added" 0 1 (fontified t) 1 13 (fontified t) 13 15 (fontified t face font-lock-comment-delimiter-face) 15 74 (fontified t face font-lock-comment-face)) . 7927) (undo-tree-id3470 . -74) (undo-tree-id3471 . 74) (undo-tree-id3472 . -13) (undo-tree-id3473 . -13) (undo-tree-id3474 . -13) (undo-tree-id3475 . -13) (undo-tree-id3476 . -13) (undo-tree-id3477 . -13) (undo-tree-id3478 . -13) (undo-tree-id3479 . -13) (undo-tree-id3480 . -13) (undo-tree-id3481 . -13) (undo-tree-id3482 . -13) (undo-tree-id3483 . -13) (undo-tree-id3484 . -13) (undo-tree-id3485 . -13) (undo-tree-id3486 . -13) (undo-tree-id3487 . -13) (undo-tree-id3488 . -13) (undo-tree-id3489 . -13) (undo-tree-id3490 . -13) (undo-tree-id3491 . -13) (undo-tree-id3492 . -13) (undo-tree-id3493 . -13) (undo-tree-id3494 . -13) (undo-tree-id3495 . -13) (undo-tree-id3496 . -13) (undo-tree-id3497 . -13) (undo-tree-id3498 . -13) (undo-tree-id3499 . -13) (undo-tree-id3500 . -13) (undo-tree-id3501 . -13) (undo-tree-id3502 . -13) (undo-tree-id3503 . -13) (undo-tree-id3504 . -13) (undo-tree-id3505 . -13) (undo-tree-id3506 . -13) (undo-tree-id3507 . -13) (undo-tree-id3508 . -13) (undo-tree-id3509 . -13) (undo-tree-id3510 . -13) (undo-tree-id3511 . -13) (undo-tree-id3512 . -13) (undo-tree-id3513 . -13) (undo-tree-id3514 . -13) (undo-tree-id3515 . -13) (undo-tree-id3516 . -13) (undo-tree-id3517 . -13) (undo-tree-id3518 . -13) (undo-tree-id3519 . -13) (undo-tree-id3520 . -13) (undo-tree-id3521 . -13) (undo-tree-id3522 . -13) (undo-tree-id3523 . -13) (undo-tree-id3524 . -13) (undo-tree-id3525 . -13) (undo-tree-id3526 . -13) (undo-tree-id3527 . -13) (undo-tree-id3528 . -13) (undo-tree-id3529 . -13) (undo-tree-id3530 . -13) (undo-tree-id3531 . -13) (undo-tree-id3532 . -13) (undo-tree-id3533 . -13) (undo-tree-id3534 . -13) (undo-tree-id3535 . -13) (undo-tree-id3536 . -13) (undo-tree-id3537 . -13) (undo-tree-id3538 . -13) (undo-tree-id3539 . -13) (undo-tree-id3540 . -13) (undo-tree-id3541 . -13) (undo-tree-id3542 . -13) (undo-tree-id3543 . -13) (undo-tree-id3544 . -13) (undo-tree-id3545 . -13) (undo-tree-id3546 . -13) (undo-tree-id3547 . -13) (undo-tree-id3548 . -13) (undo-tree-id3549 . -13) (undo-tree-id3550 . -13) (undo-tree-id3551 . -13) (undo-tree-id3552 . -13) (undo-tree-id3553 . -13) (undo-tree-id3554 . -13) (undo-tree-id3555 . -13) (undo-tree-id3556 . -13) (undo-tree-id3557 . -13) (undo-tree-id3558 . -13) (undo-tree-id3559 . -13) (undo-tree-id3560 . -13) (undo-tree-id3561 . -13) (undo-tree-id3562 . -13) (undo-tree-id3563 . -13) (undo-tree-id3564 . -13) (undo-tree-id3565 . -13) (undo-tree-id3566 . -13) (undo-tree-id3567 . -13) (undo-tree-id3568 . -13) (undo-tree-id3569 . -13) (undo-tree-id3570 . -13) (undo-tree-id3571 . -14) (undo-tree-id3572 . -14) (undo-tree-id3573 . -14) (undo-tree-id3574 . -14) (undo-tree-id3575 . -14) (undo-tree-id3576 . -14) (undo-tree-id3577 . -15) (undo-tree-id3578 . -15) (undo-tree-id3579 . -15) (undo-tree-id3580 . -15) (undo-tree-id3581 . -15) (undo-tree-id3582 . -15) (undo-tree-id3583 . -16) (undo-tree-id3584 . -16) (undo-tree-id3585 . -16) (undo-tree-id3586 . -16) (undo-tree-id3587 . -16) (undo-tree-id3588 . -16) (undo-tree-id3589 . -16) (undo-tree-id3590 . -16) (undo-tree-id3591 . -16) (undo-tree-id3592 . -16) (undo-tree-id3593 . -16) (undo-tree-id3594 . -16) (undo-tree-id3595 . -16) (undo-tree-id3596 . -16) (undo-tree-id3597 . -16) (undo-tree-id3598 . -16) (undo-tree-id3599 . -16) (undo-tree-id3600 . -16) (undo-tree-id3601 . -16) (undo-tree-id3602 . -16) (undo-tree-id3603 . -16) (undo-tree-id3604 . -16) (undo-tree-id3605 . -16) (undo-tree-id3606 . -16) (undo-tree-id3607 . -16) (undo-tree-id3608 . -16) (undo-tree-id3609 . -17) (undo-tree-id3610 . -17) (undo-tree-id3611 . -17) (undo-tree-id3612 . -17) (undo-tree-id3613 . -17) (undo-tree-id3614 . -17) (undo-tree-id3615 . -17) (undo-tree-id3616 . -17) (undo-tree-id3617 . -17) (undo-tree-id3618 . -17) (undo-tree-id3619 . -17) (undo-tree-id3620 . -17) (undo-tree-id3621 . -17) (undo-tree-id3622 . -18) (undo-tree-id3623 . -18) (undo-tree-id3624 . -18) (undo-tree-id3625 . -18) (undo-tree-id3626 . -18) (undo-tree-id3627 . -18) (undo-tree-id3628 . -19) (undo-tree-id3629 . -19) (undo-tree-id3630 . -19) (undo-tree-id3631 . -19) (undo-tree-id3632 . -19) (undo-tree-id3633 . -19) (undo-tree-id3634 . -20) (undo-tree-id3635 . -20) (undo-tree-id3636 . -20) (undo-tree-id3637 . -20) (undo-tree-id3638 . -20) (undo-tree-id3639 . -20) (undo-tree-id3640 . -20) (undo-tree-id3641 . -21) (undo-tree-id3642 . -21) (undo-tree-id3643 . -21) (undo-tree-id3644 . -21) (undo-tree-id3645 . -21) (undo-tree-id3646 . -21) (undo-tree-id3647 . -21) (undo-tree-id3648 . -21) (undo-tree-id3649 . -21) (undo-tree-id3650 . -21) (undo-tree-id3651 . -21) (undo-tree-id3652 . -21) (undo-tree-id3653 . -13) (undo-tree-id3654 . -13) (undo-tree-id3655 . -21) (undo-tree-id3656 . -21) (undo-tree-id3657 . -21) (undo-tree-id3658 . -21) (undo-tree-id3659 . -21) (undo-tree-id3660 . -21) (undo-tree-id3661 . -21) (undo-tree-id3662 . -22) (undo-tree-id3663 . -22) (undo-tree-id3664 . -22) (undo-tree-id3665 . -22) (undo-tree-id3666 . -22) (undo-tree-id3667 . -22) (undo-tree-id3668 . -22) (undo-tree-id3669 . -22) (undo-tree-id3670 . -22) (undo-tree-id3671 . -22) (undo-tree-id3672 . -22) (undo-tree-id3673 . -22) (undo-tree-id3674 . -22) (undo-tree-id3675 . -22) (undo-tree-id3676 . -22) (undo-tree-id3677 . -22) (undo-tree-id3678 . -22) (undo-tree-id3679 . -22) (undo-tree-id3680 . -22) (undo-tree-id3681 . -22) (undo-tree-id3682 . -22) (undo-tree-id3683 . -22) (undo-tree-id3684 . -22) (undo-tree-id3685 . -22) (undo-tree-id3686 . -22) (undo-tree-id3687 . -22) (undo-tree-id3688 . -23) (undo-tree-id3689 . -23) (undo-tree-id3690 . -23) (undo-tree-id3691 . -23) (undo-tree-id3692 . -23) (undo-tree-id3693 . -23) (undo-tree-id3694 . -23) (undo-tree-id3695 . -23) (undo-tree-id3696 . -23) (undo-tree-id3697 . -23) (undo-tree-id3698 . -24) (undo-tree-id3699 . -24) (undo-tree-id3700 . -24) (undo-tree-id3701 . -24) (undo-tree-id3702 . -24) (undo-tree-id3703 . -24) (undo-tree-id3704 . -24) (undo-tree-id3705 . -24) (undo-tree-id3706 . -24) (undo-tree-id3707 . -24) (undo-tree-id3708 . -25) (undo-tree-id3709 . -25) (undo-tree-id3710 . -25) (undo-tree-id3711 . -25) (undo-tree-id3712 . -25) (undo-tree-id3713 . -25) (undo-tree-id3714 . -25) (undo-tree-id3715 . -26) (undo-tree-id3716 . -26) (undo-tree-id3717 . -26) (undo-tree-id3718 . -26) (undo-tree-id3719 . -26) (undo-tree-id3720 . -26) (undo-tree-id3721 . -26) (undo-tree-id3722 . -26) (undo-tree-id3723 . -26) (undo-tree-id3724 . -26) (undo-tree-id3725 . -26) (undo-tree-id3726 . -26) (undo-tree-id3727 . -26) (undo-tree-id3728 . -26) (undo-tree-id3729 . -26) (undo-tree-id3730 . -26) (undo-tree-id3731 . -26) (undo-tree-id3732 . -26) (undo-tree-id3733 . -26) (undo-tree-id3734 . -26) (undo-tree-id3735 . -26) (undo-tree-id3736 . -26) (undo-tree-id3737 . -26) (undo-tree-id3738 . -26) (undo-tree-id3739 . -26) (undo-tree-id3740 . -26) (undo-tree-id3741 . -26) (undo-tree-id3742 . -26) (undo-tree-id3743 . -26) (undo-tree-id3744 . -26) (undo-tree-id3745 . -26) (undo-tree-id3746 . -26) (undo-tree-id3747 . -26) (undo-tree-id3748 . -28) (undo-tree-id3749 . -28) (undo-tree-id3750 . -28) (undo-tree-id3751 . -28) (undo-tree-id3752 . -28) (undo-tree-id3753 . -28) (undo-tree-id3754 . -28) (undo-tree-id3755 . -29) (undo-tree-id3756 . -29) (undo-tree-id3757 . -29) (undo-tree-id3758 . -29) (undo-tree-id3759 . -29) (undo-tree-id3760 . -29) (undo-tree-id3761 . -30) (undo-tree-id3762 . -30) (undo-tree-id3763 . -30) (undo-tree-id3764 . -30) (undo-tree-id3765 . -30) (undo-tree-id3766 . -30) (undo-tree-id3767 . -30) (undo-tree-id3768 . -30) (undo-tree-id3769 . -30) (undo-tree-id3770 . -30) (undo-tree-id3771 . -30) (undo-tree-id3772 . -30) (undo-tree-id3773 . -30) (undo-tree-id3774 . -30) (undo-tree-id3775 . -30) (undo-tree-id3776 . -30) (undo-tree-id3777 . -30) (undo-tree-id3778 . -30) (undo-tree-id3779 . -30) (undo-tree-id3780 . -30) (undo-tree-id3781 . -30) (undo-tree-id3782 . -30) (undo-tree-id3783 . -30) (undo-tree-id3784 . -30) (undo-tree-id3785 . -30) (undo-tree-id3786 . -30) (undo-tree-id3787 . -31) (undo-tree-id3788 . -31) (undo-tree-id3789 . -31) (undo-tree-id3790 . -31) (undo-tree-id3791 . -31) (undo-tree-id3792 . -31) (undo-tree-id3793 . -32) (undo-tree-id3794 . -32) (undo-tree-id3795 . -32) (undo-tree-id3796 . -32) (undo-tree-id3797 . -32) (undo-tree-id3798 . -32) (undo-tree-id3799 . -32) (undo-tree-id3800 . -32) (undo-tree-id3801 . -32) (undo-tree-id3802 . -32) (undo-tree-id3803 . -32) (undo-tree-id3804 . -32) (undo-tree-id3805 . -32) (undo-tree-id3806 . -32) (undo-tree-id3807 . -33) (undo-tree-id3808 . -33) (undo-tree-id3809 . -33) (undo-tree-id3810 . -33) (undo-tree-id3811 . -33) (undo-tree-id3812 . -33) (undo-tree-id3813 . -33) (undo-tree-id3814 . -33) (undo-tree-id3815 . -33) (undo-tree-id3816 . -33) (undo-tree-id3817 . -33) (undo-tree-id3818 . -33) (undo-tree-id3819 . -33) (undo-tree-id3820 . -33) (undo-tree-id3821 . -33) (undo-tree-id3822 . -33) (undo-tree-id3823 . -33) (undo-tree-id3824 . -33) (undo-tree-id3825 . -33) (undo-tree-id3826 . -33) (undo-tree-id3827 . -33) (undo-tree-id3828 . -33) (undo-tree-id3829 . -33) (undo-tree-id3830 . -33) (undo-tree-id3831 . -33) (undo-tree-id3832 . -33) (undo-tree-id3833 . -33) (undo-tree-id3834 . -33) (undo-tree-id3835 . -33) (undo-tree-id3836 . -33) (undo-tree-id3837 . -33) (undo-tree-id3838 . -33) (undo-tree-id3839 . -33) (undo-tree-id3840 . -33) (undo-tree-id3841 . -33) (undo-tree-id3842 . -33) (undo-tree-id3843 . -33) (undo-tree-id3844 . -33) (undo-tree-id3845 . -33) (undo-tree-id3846 . -33) (undo-tree-id3847 . -33) (undo-tree-id3848 . -33) (undo-tree-id3849 . -33) (undo-tree-id3850 . -33) (undo-tree-id3851 . -33) (undo-tree-id3852 . -33) (undo-tree-id3853 . -34) (undo-tree-id3854 . -34) (undo-tree-id3855 . -34) (undo-tree-id3856 . -34) (undo-tree-id3857 . -34) (undo-tree-id3858 . -34) (undo-tree-id3859 . -34) (undo-tree-id3860 . -34) (undo-tree-id3861 . -34) (undo-tree-id3862 . -34) (undo-tree-id3863 . -34) (undo-tree-id3864 . -34) (undo-tree-id3865 . -34) (undo-tree-id3866 . -34) (undo-tree-id3867 . -34) (undo-tree-id3868 . -34) (undo-tree-id3869 . -34) (undo-tree-id3870 . -34) (undo-tree-id3871 . -34) (undo-tree-id3872 . -34) (undo-tree-id3873 . -34) (undo-tree-id3874 . -34) (undo-tree-id3875 . -34) (undo-tree-id3876 . -34) (undo-tree-id3877 . -34) (undo-tree-id3878 . -34) (undo-tree-id3879 . -35) (undo-tree-id3880 . -35) (undo-tree-id3881 . -35) (undo-tree-id3882 . -35) (undo-tree-id3883 . -35) (undo-tree-id3884 . -35) (undo-tree-id3885 . -35) (undo-tree-id3886 . -35) (undo-tree-id3887 . -35) (undo-tree-id3888 . -35) (undo-tree-id3889 . -36) (undo-tree-id3890 . -36) (undo-tree-id3891 . -36) (undo-tree-id3892 . -36) (undo-tree-id3893 . -36) (undo-tree-id3894 . -36) (undo-tree-id3895 . -37) (undo-tree-id3896 . -37) (undo-tree-id3897 . -37) (undo-tree-id3898 . -37) (undo-tree-id3899 . -37) (undo-tree-id3900 . -37) (undo-tree-id3901 . -37) (undo-tree-id3902 . -37) (undo-tree-id3903 . -37) (undo-tree-id3904 . -37) (undo-tree-id3905 . -37) (undo-tree-id3906 . -37) (undo-tree-id3907 . -37) (undo-tree-id3908 . -37) (undo-tree-id3909 . -38) (undo-tree-id3910 . -38) (undo-tree-id3911 . -38) (undo-tree-id3912 . -38) (undo-tree-id3913 . -38) (undo-tree-id3914 . -38) (undo-tree-id3915 . -39) (undo-tree-id3916 . -39) (undo-tree-id3917 . -39) (undo-tree-id3918 . -39) (undo-tree-id3919 . -39) (undo-tree-id3920 . -39) (undo-tree-id3921 . -39) (undo-tree-id3922 . -39) (undo-tree-id3923 . -39) (undo-tree-id3924 . -39) (undo-tree-id3925 . -39) (undo-tree-id3926 . -39) (undo-tree-id3927 . -39) (undo-tree-id3928 . -39) (undo-tree-id3929 . -39) (undo-tree-id3930 . -39) (undo-tree-id3931 . -39) (undo-tree-id3932 . -39) (undo-tree-id3933 . -39) (undo-tree-id3934 . -39) (undo-tree-id3935 . -39) (undo-tree-id3936 . -39) (undo-tree-id3937 . -39) (undo-tree-id3938 . -39) (undo-tree-id3939 . -39) (undo-tree-id3940 . -39) (undo-tree-id3941 . -39) (undo-tree-id3942 . -39) (undo-tree-id3943 . -39) (undo-tree-id3944 . -39) (undo-tree-id3945 . -39) (undo-tree-id3946 . -39) (undo-tree-id3947 . -39) (undo-tree-id3948 . -41) (undo-tree-id3949 . -41) (undo-tree-id3950 . -41) (undo-tree-id3951 . -41) (undo-tree-id3952 . -41) (undo-tree-id3953 . -41) (undo-tree-id3954 . -41) (undo-tree-id3955 . -41) (undo-tree-id3956 . -41) (undo-tree-id3957 . -41) (undo-tree-id3958 . -41) (undo-tree-id3959 . -41) (undo-tree-id3960 . -41) (undo-tree-id3961 . -41) (undo-tree-id3962 . -41) (undo-tree-id3963 . -41) (undo-tree-id3964 . -41) (undo-tree-id3965 . -41) (undo-tree-id3966 . -41) (undo-tree-id3967 . -41) (undo-tree-id3968 . -13) (undo-tree-id3969 . -13) (undo-tree-id3970 . -41) (undo-tree-id3971 . -41) (undo-tree-id3972 . -41) (undo-tree-id3973 . -41) (undo-tree-id3974 . -41) (undo-tree-id3975 . -41) (undo-tree-id3976 . -41) (undo-tree-id3977 . -42) (undo-tree-id3978 . -42) (undo-tree-id3979 . -42) (undo-tree-id3980 . -42) (undo-tree-id3981 . -42) (undo-tree-id3982 . -42) (undo-tree-id3983 . -42) (undo-tree-id3984 . -42) (undo-tree-id3985 . -42) (undo-tree-id3986 . -42) (undo-tree-id3987 . -42) (undo-tree-id3988 . -42) (undo-tree-id3989 . -42) (undo-tree-id3990 . -42) (undo-tree-id3991 . -42) (undo-tree-id3992 . -42) (undo-tree-id3993 . -42) (undo-tree-id3994 . -42) (undo-tree-id3995 . -42) (undo-tree-id3996 . -42) (undo-tree-id3997 . -42) (undo-tree-id3998 . -42) (undo-tree-id3999 . -42) (undo-tree-id4000 . -42) (undo-tree-id4001 . -42) (undo-tree-id4002 . -42) (undo-tree-id4003 . -43) (undo-tree-id4004 . -43) (undo-tree-id4005 . -43) (undo-tree-id4006 . -43) (undo-tree-id4007 . -43) (undo-tree-id4008 . -43) (undo-tree-id4009 . -43) (undo-tree-id4010 . -43) (undo-tree-id4011 . -43) (undo-tree-id4012 . -43) (undo-tree-id4013 . -44) (undo-tree-id4014 . -44) (undo-tree-id4015 . -44) (undo-tree-id4016 . -44) (undo-tree-id4017 . -44) (undo-tree-id4018 . -44) (undo-tree-id4019 . -44) (undo-tree-id4020 . -44) (undo-tree-id4021 . -44) (undo-tree-id4022 . -44) (undo-tree-id4023 . -45) (undo-tree-id4024 . -45) (undo-tree-id4025 . -45) (undo-tree-id4026 . -45) (undo-tree-id4027 . -45) (undo-tree-id4028 . -45) (undo-tree-id4029 . -45) (undo-tree-id4030 . -45) (undo-tree-id4031 . -45) (undo-tree-id4032 . -45) (undo-tree-id4033 . -46) (undo-tree-id4034 . -46) (undo-tree-id4035 . -46) (undo-tree-id4036 . -46) (undo-tree-id4037 . -46) (undo-tree-id4038 . -46) (undo-tree-id4039 . -46) (undo-tree-id4040 . -46) (undo-tree-id4041 . -46) (undo-tree-id4042 . -46) (undo-tree-id4043 . -47) (undo-tree-id4044 . -47) (undo-tree-id4045 . -47) (undo-tree-id4046 . -47) (undo-tree-id4047 . -47) (undo-tree-id4048 . -47) (undo-tree-id4049 . -47) (undo-tree-id4050 . -47) (undo-tree-id4051 . -47) (undo-tree-id4052 . -47) (undo-tree-id4053 . -48) (undo-tree-id4054 . -48) (undo-tree-id4055 . -48) (undo-tree-id4056 . -48) (undo-tree-id4057 . -48) (undo-tree-id4058 . -48) (undo-tree-id4059 . -48) (undo-tree-id4060 . -48) (undo-tree-id4061 . -48) (undo-tree-id4062 . -48) (undo-tree-id4063 . -49) (undo-tree-id4064 . -49) (undo-tree-id4065 . -49) (undo-tree-id4066 . -49) (undo-tree-id4067 . -49) (undo-tree-id4068 . -49) (undo-tree-id4069 . -49) (undo-tree-id4070 . -49) (undo-tree-id4071 . -49) (undo-tree-id4072 . -49) (undo-tree-id4073 . -49) (undo-tree-id4074 . -49) (undo-tree-id4075 . -49) (undo-tree-id4076 . -49) (undo-tree-id4077 . -49) (undo-tree-id4078 . -49) (undo-tree-id4079 . -49) (undo-tree-id4080 . -50) (undo-tree-id4081 . -50) (undo-tree-id4082 . -50) (undo-tree-id4083 . -50) (undo-tree-id4084 . -50) (undo-tree-id4085 . -50) (undo-tree-id4086 . -50) (undo-tree-id4087 . -50) (undo-tree-id4088 . -50) (undo-tree-id4089 . -50) (undo-tree-id4090 . -51) (undo-tree-id4091 . -51) (undo-tree-id4092 . -51) (undo-tree-id4093 . -51) (undo-tree-id4094 . -51) (undo-tree-id4095 . -51) (undo-tree-id4096 . -51) (undo-tree-id4097 . -51) (undo-tree-id4098 . -51) (undo-tree-id4099 . -51) (undo-tree-id4100 . -52) (undo-tree-id4101 . -52) (undo-tree-id4102 . -52) (undo-tree-id4103 . -52) (undo-tree-id4104 . -52) (undo-tree-id4105 . -52) (undo-tree-id4106 . -52) (undo-tree-id4107 . -52) (undo-tree-id4108 . -52) (undo-tree-id4109 . -52) (undo-tree-id4110 . -53) (undo-tree-id4111 . -53) (undo-tree-id4112 . -53) (undo-tree-id4113 . -53) (undo-tree-id4114 . -53) (undo-tree-id4115 . -53) (undo-tree-id4116 . -53) (undo-tree-id4117 . -53) (undo-tree-id4118 . -53) (undo-tree-id4119 . -53) (undo-tree-id4120 . -54) (undo-tree-id4121 . -54) (undo-tree-id4122 . -54) (undo-tree-id4123 . -54) (undo-tree-id4124 . -54) (undo-tree-id4125 . -54) (undo-tree-id4126 . -54) (undo-tree-id4127 . -54) (undo-tree-id4128 . -54) (undo-tree-id4129 . -54) (undo-tree-id4130 . -55) (undo-tree-id4131 . -55) (undo-tree-id4132 . -55) (undo-tree-id4133 . -55) (undo-tree-id4134 . -55) (undo-tree-id4135 . -55) (undo-tree-id4136 . -55) (undo-tree-id4137 . -55) (undo-tree-id4138 . -55) (undo-tree-id4139 . -55) (undo-tree-id4140 . -56) (undo-tree-id4141 . -56) (undo-tree-id4142 . -56) (undo-tree-id4143 . -56) (undo-tree-id4144 . -56) (undo-tree-id4145 . -56) (undo-tree-id4146 . -56) (undo-tree-id4147 . -56) (undo-tree-id4148 . -56) (undo-tree-id4149 . -56) (undo-tree-id4150 . -56) (undo-tree-id4151 . -56) (undo-tree-id4152 . -56) (undo-tree-id4153 . -56) (undo-tree-id4154 . -56) (undo-tree-id4155 . -56) (undo-tree-id4156 . -56) (undo-tree-id4157 . -57) (undo-tree-id4158 . -57) (undo-tree-id4159 . -57) (undo-tree-id4160 . -57) (undo-tree-id4161 . -57) (undo-tree-id4162 . -57) (undo-tree-id4163 . -57) (undo-tree-id4164 . -57) (undo-tree-id4165 . -57) (undo-tree-id4166 . -57) (undo-tree-id4167 . -58) (undo-tree-id4168 . -58) (undo-tree-id4169 . -58) (undo-tree-id4170 . -58) (undo-tree-id4171 . -58) (undo-tree-id4172 . -58) (undo-tree-id4173 . -58) (undo-tree-id4174 . -58) (undo-tree-id4175 . -58) (undo-tree-id4176 . -58) (undo-tree-id4177 . 33) (undo-tree-id4178 . -58) (undo-tree-id4179 . -59) (undo-tree-id4180 . -59) (undo-tree-id4181 . -59) (undo-tree-id4182 . -59) (undo-tree-id4183 . -59) (undo-tree-id4184 . -59) (undo-tree-id4185 . -59) (undo-tree-id4186 . -60) (undo-tree-id4187 . -60) (undo-tree-id4188 . -60) (undo-tree-id4189 . -60) (undo-tree-id4190 . -60) (undo-tree-id4191 . -60) (undo-tree-id4192 . -60) (undo-tree-id4193 . -60) (undo-tree-id4194 . -60) (undo-tree-id4195 . -60) (undo-tree-id4196 . -60) (undo-tree-id4197 . -60) (undo-tree-id4198 . -60) (undo-tree-id4199 . -60) (undo-tree-id4200 . -60) (undo-tree-id4201 . -60) (undo-tree-id4202 . -60) (undo-tree-id4203 . -60) (undo-tree-id4204 . -60) (undo-tree-id4205 . -60) (undo-tree-id4206 . -60) (undo-tree-id4207 . -60) (undo-tree-id4208 . -60) (undo-tree-id4209 . -60) (undo-tree-id4210 . -60) (undo-tree-id4211 . -60) (undo-tree-id4212 . -61) (undo-tree-id4213 . -61) (undo-tree-id4214 . -61) (undo-tree-id4215 . -61) (undo-tree-id4216 . -61) (undo-tree-id4217 . -61) (undo-tree-id4218 . -61) (undo-tree-id4219 . -61) (undo-tree-id4220 . -61) (undo-tree-id4221 . -61) (undo-tree-id4222 . -62) (undo-tree-id4223 . -62) (undo-tree-id4224 . -62) (undo-tree-id4225 . -62) (undo-tree-id4226 . -62) (undo-tree-id4227 . -62) (undo-tree-id4228 . -62) (undo-tree-id4229 . -62) (undo-tree-id4230 . -62) (undo-tree-id4231 . -62) (undo-tree-id4232 . -63) (undo-tree-id4233 . -63) (undo-tree-id4234 . -63) (undo-tree-id4235 . -63) (undo-tree-id4236 . -63) (undo-tree-id4237 . -63) (undo-tree-id4238 . -63) (undo-tree-id4239 . -63) (undo-tree-id4240 . -63) (undo-tree-id4241 . -63) (undo-tree-id4242 . -64) (undo-tree-id4243 . -64) (undo-tree-id4244 . -64) (undo-tree-id4245 . -64) (undo-tree-id4246 . -64) (undo-tree-id4247 . -64) (undo-tree-id4248 . -64) (undo-tree-id4249 . -65) (undo-tree-id4250 . -65) (undo-tree-id4251 . -65) (undo-tree-id4252 . -65) (undo-tree-id4253 . -65) (undo-tree-id4254 . -65) (undo-tree-id4255 . -65) (undo-tree-id4256 . -65) (undo-tree-id4257 . -65) (undo-tree-id4258 . -65) (undo-tree-id4259 . -65) (undo-tree-id4260 . -65) (undo-tree-id4261 . -65) (undo-tree-id4262 . -65) (undo-tree-id4263 . -65) (undo-tree-id4264 . -65) (undo-tree-id4265 . -65) (undo-tree-id4266 . -65) (undo-tree-id4267 . -65) (undo-tree-id4268 . -65) (undo-tree-id4269 . -65) (undo-tree-id4270 . -65) (undo-tree-id4271 . -65) (undo-tree-id4272 . -65) (undo-tree-id4273 . -65) (undo-tree-id4274 . -65) (undo-tree-id4275 . -66) (undo-tree-id4276 . -66) (undo-tree-id4277 . -66) (undo-tree-id4278 . -66) (undo-tree-id4279 . -66) (undo-tree-id4280 . -66) (undo-tree-id4281 . -66) (undo-tree-id4282 . -66) (undo-tree-id4283 . -66) (undo-tree-id4284 . -66) (undo-tree-id4285 . -67) (undo-tree-id4286 . -67) (undo-tree-id4287 . -67) (undo-tree-id4288 . -67) (undo-tree-id4289 . -67) (undo-tree-id4290 . -67) (undo-tree-id4291 . -68) (undo-tree-id4292 . -68) (undo-tree-id4293 . -68) (undo-tree-id4294 . -68) (undo-tree-id4295 . -68) (undo-tree-id4296 . -68) (undo-tree-id4297 . -68) (undo-tree-id4298 . -68) (undo-tree-id4299 . -68) (undo-tree-id4300 . -68) (undo-tree-id4301 . -68) (undo-tree-id4302 . -68) (undo-tree-id4303 . -68) (undo-tree-id4304 . -68) (undo-tree-id4305 . -69) (undo-tree-id4306 . -69) (undo-tree-id4307 . -69) (undo-tree-id4308 . -69) (undo-tree-id4309 . -69) (undo-tree-id4310 . -69) (undo-tree-id4311 . -70) (undo-tree-id4312 . -70) (undo-tree-id4313 . -70) (undo-tree-id4314 . -70) (undo-tree-id4315 . -70) (undo-tree-id4316 . -70) (undo-tree-id4317 . -70) (undo-tree-id4318 . -70) (undo-tree-id4319 . -70) (undo-tree-id4320 . -70) (undo-tree-id4321 . -70) (undo-tree-id4322 . -70) (undo-tree-id4323 . -70) (undo-tree-id4324 . -70) (undo-tree-id4325 . -70) (undo-tree-id4326 . -70) (undo-tree-id4327 . -70) (undo-tree-id4328 . -70) (undo-tree-id4329 . -70) (undo-tree-id4330 . -70) (undo-tree-id4331 . -70) (undo-tree-id4332 . -70) (undo-tree-id4333 . -70) (undo-tree-id4334 . -70) (undo-tree-id4335 . -70) (undo-tree-id4336 . -70) (undo-tree-id4337 . -71) (undo-tree-id4338 . -71) (undo-tree-id4339 . -71) (undo-tree-id4340 . -71) (undo-tree-id4341 . -71) (undo-tree-id4342 . -71) (undo-tree-id4343 . -72) (undo-tree-id4344 . -72) (undo-tree-id4345 . -72) (undo-tree-id4346 . -72) (undo-tree-id4347 . -72) (undo-tree-id4348 . -72) (undo-tree-id4349 . -73) (undo-tree-id4350 . -73) (undo-tree-id4351 . -73) (undo-tree-id4352 . -73) (undo-tree-id4353 . -73) (undo-tree-id4354 . -73) (undo-tree-id4355 . -1) (undo-tree-id4356 . -2) (undo-tree-id4357 . -5) (undo-tree-id4358 . -6) (undo-tree-id4359 . -9) (undo-tree-id4360 . -10) (undo-tree-id4361 . -74) (undo-tree-id4362 . -74) (undo-tree-id4363 . -74) (undo-tree-id4364 . -74) (undo-tree-id4365 . -74) (undo-tree-id4366 . -74) (undo-tree-id4367 . -74) (undo-tree-id4368 . -74) (undo-tree-id4369 . -74) (undo-tree-id4370 . -74) (undo-tree-id4371 . -74) (undo-tree-id4372 . -74) (undo-tree-id4373 . -74) (undo-tree-id4374 . -74) (undo-tree-id4375 . -74) (undo-tree-id4376 . -74) (undo-tree-id4377 . -74) (undo-tree-id4378 . -74) (undo-tree-id4379 . -74) (undo-tree-id4380 . -74) (undo-tree-id4381 . -74) (undo-tree-id4382 . -74) (undo-tree-id4383 . -74) (undo-tree-id4384 . -74) (undo-tree-id4385 . -74) (undo-tree-id4386 . -74) (undo-tree-id4387 . -74) (undo-tree-id4388 . -74) (undo-tree-id4389 . -74) (undo-tree-id4390 . -74) (undo-tree-id4391 . -74) (undo-tree-id4392 . -74) (undo-tree-id4393 . -74) (undo-tree-id4394 . -74) (undo-tree-id4395 . -74) (undo-tree-id4396 . -74) (undo-tree-id4397 . -74) (undo-tree-id4398 . -74)) nil (25164 47043 480423 600000) 0 nil])
([nil nil ((8624 . 8630)) ((#("remove" 0 6 (fontified t)) . 8624)) (25164 46800 674935 500000) 0 nil])
([nil nil ((8628 . 8649)) nil (25164 47043 481611 100000) 0 nil])
([nil nil ((#("unsatisfied value" 0 17 (fontified t face font-lock-comment-face)) . 8571)) ((8571 . 8588)) (25164 46800 438577 600000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8645) (undo-tree-id5560 . -4) (undo-tree-id5561 . -1) (undo-tree-id5562 . -4) (undo-tree-id5563 . -4) (undo-tree-id5564 . -4) (undo-tree-id5565 . -4) (undo-tree-id5566 . -4) (undo-tree-id5567 . -4) (undo-tree-id5568 . -4) (undo-tree-id5569 . -4) (undo-tree-id5570 . -4) (undo-tree-id5571 . -4) (undo-tree-id5572 . -4) (undo-tree-id5573 . -4) (undo-tree-id5574 . -4) (undo-tree-id5575 . -4) (undo-tree-id5576 . -4) (undo-tree-id5577 . -4) (undo-tree-id5578 . -4) (undo-tree-id5579 . -4) (undo-tree-id5580 . -4) (undo-tree-id5581 . -4) (undo-tree-id5582 . -4) (undo-tree-id5583 . -4) (undo-tree-id5584 . -4) (undo-tree-id5585 . -4) (undo-tree-id5586 . -4) (undo-tree-id5587 . -4) (undo-tree-id5588 . -4) (undo-tree-id5589 . -4) 8649) nil (25164 47079 72221 900000) 0 nil] [nil nil ((8649 . 8654)) ((#("neigh" 0 5 (fontified t)) . 8649) (undo-tree-id4864 . -5) (undo-tree-id4865 . -5) (undo-tree-id4866 . -5)) (25164 47043 469573 900000) 0 nil])
([nil nil ((#("# need to remove the " 0 2 (fontified t face font-lock-comment-delimiter-face) 2 21 (fontified t face font-lock-comment-face)) . 8550) (undo-tree-id379 . -21)) ((8550 . 8571)) (25164 46800 183546 800000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8641) (undo-tree-id5507 . -4) (undo-tree-id5508 . -4) (undo-tree-id5509 . -4) (undo-tree-id5510 . -4) (undo-tree-id5511 . -4) (undo-tree-id5512 . -4) (undo-tree-id5513 . -4) (undo-tree-id5514 . -4) (undo-tree-id5515 . -4) (undo-tree-id5516 . -4) (undo-tree-id5517 . -4) (undo-tree-id5518 . -4) (undo-tree-id5519 . -4) (undo-tree-id5520 . -4) (undo-tree-id5521 . -4) (undo-tree-id5522 . -4) (undo-tree-id5523 . -4) (undo-tree-id5524 . -4) (undo-tree-id5525 . -4) (undo-tree-id5526 . -4) (undo-tree-id5527 . -4) (undo-tree-id5528 . -4) (undo-tree-id5529 . -4) (undo-tree-id5530 . -4) (undo-tree-id5531 . -4) (undo-tree-id5532 . -4) (undo-tree-id5533 . -4) (undo-tree-id5534 . -4) (undo-tree-id5535 . -1) (undo-tree-id5536 . -4) (undo-tree-id5537 . -4) (undo-tree-id5538 . -4) (undo-tree-id5539 . -4) (undo-tree-id5540 . -4) (undo-tree-id5541 . -4) (undo-tree-id5542 . -4) (undo-tree-id5543 . -4) (undo-tree-id5544 . -4) (undo-tree-id5545 . -4) (undo-tree-id5546 . -4) (undo-tree-id5547 . -4) (undo-tree-id5548 . -4) (undo-tree-id5549 . -4) (undo-tree-id5550 . -4) (undo-tree-id5551 . -4) (undo-tree-id5552 . -4) (undo-tree-id5553 . -4) (undo-tree-id5554 . -4) (undo-tree-id5555 . -4) (undo-tree-id5556 . -4) (undo-tree-id5557 . -4) (undo-tree-id5558 . -4) (undo-tree-id5559 . -4) 8645) nil (25164 47079 72190 800000) 0 nil])
nil
([nil nil ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8529) (undo-tree-id378 . -21)) ((8529 . 8550)) (25164 46799 975900 400000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8637) (undo-tree-id5446 . -4) (undo-tree-id5447 . -4) (undo-tree-id5448 . -4) (undo-tree-id5449 . -4) (undo-tree-id5450 . -4) (undo-tree-id5451 . -4) (undo-tree-id5452 . -4) (undo-tree-id5453 . -4) (undo-tree-id5454 . -4) (undo-tree-id5455 . -4) (undo-tree-id5456 . -4) (undo-tree-id5457 . -4) (undo-tree-id5458 . -4) (undo-tree-id5459 . -4) (undo-tree-id5460 . -4) (undo-tree-id5461 . -4) (undo-tree-id5462 . -4) (undo-tree-id5463 . -4) (undo-tree-id5464 . -4) (undo-tree-id5465 . -4) (undo-tree-id5466 . -4) (undo-tree-id5467 . -4) (undo-tree-id5468 . -4) (undo-tree-id5469 . -4) (undo-tree-id5470 . -4) (undo-tree-id5471 . -4) (undo-tree-id5472 . -4) (undo-tree-id5473 . -4) (undo-tree-id5474 . -4) (undo-tree-id5475 . -4) (undo-tree-id5476 . -4) (undo-tree-id5477 . -4) (undo-tree-id5478 . -4) (undo-tree-id5479 . -4) (undo-tree-id5480 . -4) (undo-tree-id5481 . -4) (undo-tree-id5482 . -4) (undo-tree-id5483 . -4) (undo-tree-id5484 . -4) (undo-tree-id5485 . -4) (undo-tree-id5486 . -4) (undo-tree-id5487 . -4) (undo-tree-id5488 . -4) (undo-tree-id5489 . -4) (undo-tree-id5490 . -4) (undo-tree-id5491 . -4) (undo-tree-id5492 . -4) (undo-tree-id5493 . -4) (undo-tree-id5494 . -4) (undo-tree-id5495 . -4) (undo-tree-id5496 . -4) (undo-tree-id5497 . -1) (undo-tree-id5498 . -4) (undo-tree-id5499 . -4) (undo-tree-id5500 . -4) (undo-tree-id5501 . -4) (undo-tree-id5502 . -4) (undo-tree-id5503 . -4) (undo-tree-id5504 . -4) (undo-tree-id5505 . -4) (undo-tree-id5506 . -4) 8641) nil (25164 47079 72133 600000) 0 nil])
([nil nil ((#("else:" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil)) . 8528) (undo-tree-id377 . -5) (8524 . 8528)) ((#("    " 0 4 (fontified nil)) . 8524) (undo-tree-id2750 . -1) (8528 . 8533)) (25164 46799 744165 800000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8633) (undo-tree-id5377 . -4) (undo-tree-id5378 . -4) (undo-tree-id5379 . -4) (undo-tree-id5380 . -4) (undo-tree-id5381 . -4) (undo-tree-id5382 . -4) (undo-tree-id5383 . -4) (undo-tree-id5384 . -4) (undo-tree-id5385 . -4) (undo-tree-id5386 . -4) (undo-tree-id5387 . -4) (undo-tree-id5388 . -4) (undo-tree-id5389 . -4) (undo-tree-id5390 . -4) (undo-tree-id5391 . -4) (undo-tree-id5392 . -4) (undo-tree-id5393 . -4) (undo-tree-id5394 . -4) (undo-tree-id5395 . -4) (undo-tree-id5396 . -4) (undo-tree-id5397 . -4) (undo-tree-id5398 . -4) (undo-tree-id5399 . -4) (undo-tree-id5400 . -4) (undo-tree-id5401 . -4) (undo-tree-id5402 . -4) (undo-tree-id5403 . -4) (undo-tree-id5404 . -4) (undo-tree-id5405 . -4) (undo-tree-id5406 . -4) (undo-tree-id5407 . -4) (undo-tree-id5408 . -4) (undo-tree-id5409 . -4) (undo-tree-id5410 . -4) (undo-tree-id5411 . -4) (undo-tree-id5412 . -4) (undo-tree-id5413 . -4) (undo-tree-id5414 . -4) (undo-tree-id5415 . -4) (undo-tree-id5416 . -4) (undo-tree-id5417 . -4) (undo-tree-id5418 . -4) (undo-tree-id5419 . -4) (undo-tree-id5420 . -4) (undo-tree-id5421 . -4) (undo-tree-id5422 . -4) (undo-tree-id5423 . -4) (undo-tree-id5424 . -4) (undo-tree-id5425 . -4) (undo-tree-id5426 . -4) (undo-tree-id5427 . -4) (undo-tree-id5428 . -4) (undo-tree-id5429 . -4) (undo-tree-id5430 . -4) (undo-tree-id5431 . -4) (undo-tree-id5432 . -4) (undo-tree-id5433 . -4) (undo-tree-id5434 . -4) (undo-tree-id5435 . -4) (undo-tree-id5436 . -1) (undo-tree-id5437 . -4) (undo-tree-id5438 . -4) (undo-tree-id5439 . -4) (undo-tree-id5440 . -4) (undo-tree-id5441 . -4) (undo-tree-id5442 . -4) (undo-tree-id5443 . -4) (undo-tree-id5444 . -4) (undo-tree-id5445 . -4) 8637) nil (25164 47079 72071 200000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 17 (fontified t) 17 21 (fontified t)) . 8507) (undo-tree-id376 . -21)) ((8507 . 8528)) (25164 46799 494113 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -8629) (undo-tree-id5299 . -4) (undo-tree-id5300 . -4) (undo-tree-id5301 . -4) (undo-tree-id5302 . -4) (undo-tree-id5303 . -4) (undo-tree-id5304 . -4) (undo-tree-id5305 . -4) (undo-tree-id5306 . -4) (undo-tree-id5307 . -4) (undo-tree-id5308 . -4) (undo-tree-id5309 . -4) (undo-tree-id5310 . -4) (undo-tree-id5311 . -4) (undo-tree-id5312 . -4) (undo-tree-id5313 . -4) (undo-tree-id5314 . -4) (undo-tree-id5315 . -4) (undo-tree-id5316 . -4) (undo-tree-id5317 . -4) (undo-tree-id5318 . -4) (undo-tree-id5319 . -1) (undo-tree-id5320 . -4) (undo-tree-id5321 . -4) (undo-tree-id5322 . -4) (undo-tree-id5323 . -4) (undo-tree-id5324 . -4) (undo-tree-id5325 . -4) (undo-tree-id5326 . -4) (undo-tree-id5327 . -4) (undo-tree-id5328 . -4) (undo-tree-id5329 . -4) (undo-tree-id5330 . -4) (undo-tree-id5331 . -4) (undo-tree-id5332 . -4) (undo-tree-id5333 . -4) (undo-tree-id5334 . -4) (undo-tree-id5335 . -4) (undo-tree-id5336 . -4) (undo-tree-id5337 . -4) (undo-tree-id5338 . -4) (undo-tree-id5339 . -4) (undo-tree-id5340 . -4) (undo-tree-id5341 . -4) (undo-tree-id5342 . -4) (undo-tree-id5343 . -4) (undo-tree-id5344 . -4) (undo-tree-id5345 . -4) (undo-tree-id5346 . -4) (undo-tree-id5347 . -4) (undo-tree-id5348 . -4) (undo-tree-id5349 . -4) (undo-tree-id5350 . -4) (undo-tree-id5351 . -4) (undo-tree-id5352 . -4) (undo-tree-id5353 . -4) (undo-tree-id5354 . -4) (undo-tree-id5355 . -4) (undo-tree-id5356 . -4) (undo-tree-id5357 . -4) (undo-tree-id5358 . -4) (undo-tree-id5359 . -4) (undo-tree-id5360 . -4) (undo-tree-id5361 . -4) (undo-tree-id5362 . -4) (undo-tree-id5363 . -4) (undo-tree-id5364 . -4) (undo-tree-id5365 . -4) (undo-tree-id5366 . -4) (undo-tree-id5367 . -1) (undo-tree-id5368 . -4) (undo-tree-id5369 . -4) (undo-tree-id5370 . -4) (undo-tree-id5371 . -4) (undo-tree-id5372 . -4) (undo-tree-id5373 . -4) (undo-tree-id5374 . -4) (undo-tree-id5375 . -4) (undo-tree-id5376 . -4) 8633) nil (25164 47079 72000 600000) 0 nil])
([nil nil ((8507 . 8508)) ((#("
" 0 1 (fontified t)) . 8507) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1)) (25164 46799 276025 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8628) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) 8629) nil (25164 47079 71919 600000) 0 nil])
([nil nil ((8508 . 8528)) ((#("                    " 0 20 (fontified t)) . 8508) (undo-tree-id2734 . -1) (undo-tree-id2735 . -4) (undo-tree-id2736 . -5) (undo-tree-id2737 . -8) (undo-tree-id2738 . -9) (undo-tree-id2739 . -12) (undo-tree-id2740 . -13) (undo-tree-id2741 . -16) (undo-tree-id2742 . -17)) (25164 46799 68894 700000) 0 nil])
([nil nil ((9226 . 9251)) nil (25164 47079 71809 500000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8507) (undo-tree-id375 . -21)) ((8507 . 8528)) (25164 46798 826581 700000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9247) (undo-tree-id5184 . -4) (undo-tree-id5185 . -1) (undo-tree-id5186 . -4) (undo-tree-id5187 . -4) (undo-tree-id5188 . -4) (undo-tree-id5189 . -4) (undo-tree-id5190 . -4) (undo-tree-id5191 . -4) (undo-tree-id5192 . -4) (undo-tree-id5193 . -4) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) 9251) nil (25164 47079 71806 600000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified nil)) . 8508) (8528 . 8544)) ((#("                " 0 16 (fontified nil)) . 8528) (undo-tree-id2720 . -16) (undo-tree-id2721 . -16) (undo-tree-id2722 . -16) (undo-tree-id2723 . -16) (undo-tree-id2724 . -16) (undo-tree-id2725 . -16) (undo-tree-id2726 . -16) (undo-tree-id2727 . -1) (undo-tree-id2728 . -4) (undo-tree-id2729 . -5) (undo-tree-id2730 . -8) (undo-tree-id2731 . -9) (undo-tree-id2732 . -12) (undo-tree-id2733 . -13) (8508 . 8528)) (25164 46798 549084 700000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9243) (undo-tree-id5164 . -4) (undo-tree-id5165 . -4) (undo-tree-id5166 . -4) (undo-tree-id5167 . -4) (undo-tree-id5168 . -4) (undo-tree-id5169 . -4) (undo-tree-id5170 . -4) (undo-tree-id5171 . -4) (undo-tree-id5172 . -4) (undo-tree-id5173 . -4) (undo-tree-id5174 . -1) (undo-tree-id5175 . -4) (undo-tree-id5176 . -4) (undo-tree-id5177 . -4) (undo-tree-id5178 . -4) (undo-tree-id5179 . -4) (undo-tree-id5180 . -4) (undo-tree-id5181 . -4) (undo-tree-id5182 . -4) (undo-tree-id5183 . -4) 9247) nil (25164 47079 71790 200000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . 8508) (8524 . 8536)) ((#("            " 0 12 (fontified nil)) . 8524) (undo-tree-id2715 . -1) (undo-tree-id2716 . -4) (undo-tree-id2717 . -5) (undo-tree-id2718 . -8) (undo-tree-id2719 . -9) (8508 . 8524)) (25164 46798 295351 200000) 0 nil])
([nil nil ((9243 . 9254)) nil (25164 47079 71765 600000) 0 nil])
([nil nil ((8509 . 8556) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 27 (fontified t) 27 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8508) (undo-tree-id371 . -27) (undo-tree-id372 . -27) (undo-tree-id373 . -27) (undo-tree-id374 . -38)) ((8508 . 8555) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8509) (undo-tree-id2709 . -47) (undo-tree-id2710 . -1) (undo-tree-id2711 . -4) (undo-tree-id2712 . -5) (undo-tree-id2713 . -8) (undo-tree-id2714 . -9)) (25164 46798 30630 500000) 0 nil])
([nil nil ((9243 . 9265) (#("neighborNei" 0 11 (fontified t)) . -9243) (undo-tree-id4984 . -11) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) (undo-tree-id5017 . -2) (undo-tree-id5018 . -2) (undo-tree-id5019 . -2) (undo-tree-id5020 . -2) (undo-tree-id5021 . -3) (undo-tree-id5022 . -3) (undo-tree-id5023 . -3) (undo-tree-id5024 . -3) (undo-tree-id5025 . -3) (undo-tree-id5026 . -3) (undo-tree-id5027 . -3) (undo-tree-id5028 . -3) (undo-tree-id5029 . -3) (undo-tree-id5030 . -3) (undo-tree-id5031 . -4) (undo-tree-id5032 . -4) (undo-tree-id5033 . -4) (undo-tree-id5034 . -4) (undo-tree-id5035 . -4) (undo-tree-id5036 . -4) (undo-tree-id5037 . -4) (undo-tree-id5038 . -4) (undo-tree-id5039 . -4) (undo-tree-id5040 . -4) (undo-tree-id5041 . -5) (undo-tree-id5042 . -5) (undo-tree-id5043 . -5) (undo-tree-id5044 . -5) (undo-tree-id5045 . -5) (undo-tree-id5046 . -5) (undo-tree-id5047 . -5) (undo-tree-id5048 . -5) (undo-tree-id5049 . -5) (undo-tree-id5050 . -5) (undo-tree-id5051 . -6) (undo-tree-id5052 . -6) (undo-tree-id5053 . -6) (undo-tree-id5054 . -6) (undo-tree-id5055 . -6) (undo-tree-id5056 . -6) (undo-tree-id5057 . -6) (undo-tree-id5058 . -6) (undo-tree-id5059 . -6) (undo-tree-id5060 . -6) (undo-tree-id5061 . -6) (undo-tree-id5062 . -6) (undo-tree-id5063 . -6) (undo-tree-id5064 . -6) (undo-tree-id5065 . -6) (undo-tree-id5066 . -6) (undo-tree-id5067 . -6) (undo-tree-id5068 . -7) (undo-tree-id5069 . -7) (undo-tree-id5070 . -7) (undo-tree-id5071 . -7) (undo-tree-id5072 . -7) (undo-tree-id5073 . -7) (undo-tree-id5074 . -7) (undo-tree-id5075 . -7) (undo-tree-id5076 . -7) (undo-tree-id5077 . -7) (undo-tree-id5078 . -7) (undo-tree-id5079 . -7) (undo-tree-id5080 . -7) (undo-tree-id5081 . -7) (undo-tree-id5082 . -7) (undo-tree-id5083 . -7) (undo-tree-id5084 . -7) (undo-tree-id5085 . -8) (undo-tree-id5086 . -8) (undo-tree-id5087 . -8) (undo-tree-id5088 . -8) (undo-tree-id5089 . -8) (undo-tree-id5090 . -8) (undo-tree-id5091 . -8) (undo-tree-id5092 . -8) (undo-tree-id5093 . -8) (undo-tree-id5094 . -8) (undo-tree-id5095 . -9) (undo-tree-id5096 . -9) (undo-tree-id5097 . -9) (undo-tree-id5098 . -9) (undo-tree-id5099 . -9) (undo-tree-id5100 . -9) (undo-tree-id5101 . -9) (undo-tree-id5102 . -9) (undo-tree-id5103 . -9) (undo-tree-id5104 . -9) (undo-tree-id5105 . -9) (undo-tree-id5106 . -9) (undo-tree-id5107 . -9) (undo-tree-id5108 . -9) (undo-tree-id5109 . -9) (undo-tree-id5110 . -9) (undo-tree-id5111 . -9) (undo-tree-id5112 . -9) (undo-tree-id5113 . -9) (undo-tree-id5114 . -9) (undo-tree-id5115 . -9) (undo-tree-id5116 . -9) (undo-tree-id5117 . -9) (undo-tree-id5118 . -9) (undo-tree-id5119 . -9) (undo-tree-id5120 . -10) (undo-tree-id5121 . -10) (undo-tree-id5122 . -10) (undo-tree-id5123 . -10) (undo-tree-id5124 . -10) (undo-tree-id5125 . -10) (undo-tree-id5126 . -10) (undo-tree-id5127 . -10) (undo-tree-id5128 . -10) (undo-tree-id5129 . -10) (undo-tree-id5130 . -11) (undo-tree-id5131 . -11) (undo-tree-id5132 . -11) (undo-tree-id5133 . -11) (undo-tree-id5134 . -11) (undo-tree-id5135 . -11) (undo-tree-id5136 . -11) (undo-tree-id5137 . -11) (undo-tree-id5138 . -11) (undo-tree-id5139 . -11) (undo-tree-id5140 . -11) (undo-tree-id5141 . -11) (undo-tree-id5142 . -11) (undo-tree-id5143 . -11) (undo-tree-id5144 . -11) (undo-tree-id5145 . -11) (undo-tree-id5146 . -11) (undo-tree-id5147 . -11) (undo-tree-id5148 . -11) (undo-tree-id5149 . -11) (undo-tree-id5150 . -11) (undo-tree-id5151 . -11) (undo-tree-id5152 . -11) (undo-tree-id5153 . -11) (undo-tree-id5154 . -11) (undo-tree-id5155 . -11) (undo-tree-id5156 . -11) (undo-tree-id5157 . -11) (undo-tree-id5158 . -11) (undo-tree-id5159 . -11) (undo-tree-id5160 . -11) (undo-tree-id5161 . -11) (undo-tree-id5162 . -11) (undo-tree-id5163 . -11) 9254) nil (25164 47079 71741 900000) 0 nil])
([nil nil ((8562 . 8609) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8509) (undo-tree-id370 . -38)) ((8509 . 8556) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8562) (undo-tree-id2703 . -47) (undo-tree-id2704 . -1) (undo-tree-id2705 . -4) (undo-tree-id2706 . -5) (undo-tree-id2707 . -8) (undo-tree-id2708 . -9)) (25164 46797 759240 500000) 0 nil])
([nil nil ((9265 . 9272)) nil (25164 47079 70088 300000) 0 nil])
([nil nil ((8608 . 8655) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8562) (undo-tree-id369 . -38)) ((8562 . 8609) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8608) (undo-tree-id2697 . -47) (undo-tree-id2698 . -1) (undo-tree-id2699 . -4) (undo-tree-id2700 . -5) (undo-tree-id2701 . -8) (undo-tree-id2702 . -9)) (25164 46797 496124 200000) 0 nil])
([nil nil ((8858 . 8875)) nil (25164 47079 70086 400000) 0 nil])
([nil nil ((8676 . 8723) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8608) (undo-tree-id368 . -38)) ((8608 . 8655) (#("            neighborDomain.remove(neighborRow)
" 0 12 (fontified t) 12 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-1-face)) 46 47 (fontified t)) . 8676) (undo-tree-id2611 . -34) (undo-tree-id2612 . -34) (undo-tree-id2613 . -34) (undo-tree-id2614 . -34) (undo-tree-id2615 . -34) (undo-tree-id2616 . -34) (undo-tree-id2617 . -34) (undo-tree-id2618 . -34) (undo-tree-id2619 . -34) (undo-tree-id2620 . -34) (undo-tree-id2621 . -34) (undo-tree-id2622 . -34) (undo-tree-id2623 . -34) (undo-tree-id2624 . -34) (undo-tree-id2625 . -34) (undo-tree-id2626 . -34) (undo-tree-id2627 . -34) (undo-tree-id2628 . -34) (undo-tree-id2629 . -34) (undo-tree-id2630 . -34) (undo-tree-id2631 . -34) (undo-tree-id2632 . -34) (undo-tree-id2633 . -34) (undo-tree-id2634 . -34) (undo-tree-id2635 . -34) (undo-tree-id2636 . -34) (undo-tree-id2637 . -34) (undo-tree-id2638 . -34) (undo-tree-id2639 . -34) (undo-tree-id2640 . -34) (undo-tree-id2641 . -34) (undo-tree-id2642 . -34) (undo-tree-id2643 . -34) (undo-tree-id2644 . -34) (undo-tree-id2645 . -34) (undo-tree-id2646 . -34) (undo-tree-id2647 . -34) (undo-tree-id2648 . -34) (undo-tree-id2649 . -34) (undo-tree-id2650 . -34) (undo-tree-id2651 . -34) (undo-tree-id2652 . -34) (undo-tree-id2653 . -34) (undo-tree-id2654 . -46) (undo-tree-id2655 . -46) (undo-tree-id2656 . -46) (undo-tree-id2657 . -46) (undo-tree-id2658 . -46) (undo-tree-id2659 . -46) (undo-tree-id2660 . -34) (undo-tree-id2661 . -34) (undo-tree-id2662 . -34) (undo-tree-id2663 . -34) (undo-tree-id2664 . -34) (undo-tree-id2665 . -34) (undo-tree-id2666 . -34) (undo-tree-id2667 . -34) (undo-tree-id2668 . -34) (undo-tree-id2669 . -34) (undo-tree-id2670 . -34) (undo-tree-id2671 . -34) (undo-tree-id2672 . -34) (undo-tree-id2673 . -34) (undo-tree-id2674 . -34) (undo-tree-id2675 . -34) (undo-tree-id2676 . -34) (undo-tree-id2677 . -34) (undo-tree-id2678 . -34) (undo-tree-id2679 . -34) (undo-tree-id2680 . -34) (undo-tree-id2681 . -34) (undo-tree-id2682 . -34) (undo-tree-id2683 . -34) (undo-tree-id2684 . -34) (undo-tree-id2685 . -34) (undo-tree-id2686 . -34) (undo-tree-id2687 . -34) (undo-tree-id2688 . -34) (undo-tree-id2689 . -34) (undo-tree-id2690 . -47) (undo-tree-id2691 . -47) (undo-tree-id2692 . -1) (undo-tree-id2693 . -4) (undo-tree-id2694 . -5) (undo-tree-id2695 . -8) (undo-tree-id2696 . -9)) (25164 46797 239648 800000) 0 nil])
([nil nil ((8875 . 8883)) nil (25164 47079 70084 300000) 0 nil])
([nil nil ((8508 . 8528)) ((#("                    " 0 20 (fontified t)) . 8508) (undo-tree-id2602 . -1) (undo-tree-id2603 . -4) (undo-tree-id2604 . -5) (undo-tree-id2605 . -8) (undo-tree-id2606 . -9) (undo-tree-id2607 . -12) (undo-tree-id2608 . -13) (undo-tree-id2609 . -16) (undo-tree-id2610 . -17)) (25164 46796 997051 400000) 0 nil])
([nil nil ((8878 . 8900) (#("neigh" 0 5 (fontified t)) . -8878) (undo-tree-id4888 . -5) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -2) (undo-tree-id4896 . -2) (undo-tree-id4897 . -2) (undo-tree-id4898 . -2) (undo-tree-id4899 . -2) (undo-tree-id4900 . -2) (undo-tree-id4901 . -3) (undo-tree-id4902 . -3) (undo-tree-id4903 . -3) (undo-tree-id4904 . -3) (undo-tree-id4905 . -3) (undo-tree-id4906 . -3) (undo-tree-id4907 . -4) (undo-tree-id4908 . -4) (undo-tree-id4909 . -4) (undo-tree-id4910 . -4) (undo-tree-id4911 . -4) (undo-tree-id4912 . -4) (undo-tree-id4913 . -5) (undo-tree-id4914 . -5) (undo-tree-id4915 . -5) (undo-tree-id4916 . -5) (undo-tree-id4917 . -5) (undo-tree-id4918 . -5) (undo-tree-id4919 . -5) (undo-tree-id4920 . -5) (undo-tree-id4921 . -5) (undo-tree-id4922 . -5) (undo-tree-id4923 . -5) (undo-tree-id4924 . -5) (undo-tree-id4925 . -5) (undo-tree-id4926 . -5) (undo-tree-id4927 . -5) (undo-tree-id4928 . -5) (undo-tree-id4929 . -5) (undo-tree-id4930 . -5) (undo-tree-id4931 . -5) (undo-tree-id4932 . -5) (undo-tree-id4933 . -5) (undo-tree-id4934 . -5) (undo-tree-id4935 . -5) (undo-tree-id4936 . -5) (undo-tree-id4937 . -5) (undo-tree-id4938 . -5) (undo-tree-id4939 . -5) (undo-tree-id4940 . -5) (undo-tree-id4941 . -5) (undo-tree-id4942 . -5) (undo-tree-id4943 . -5) (undo-tree-id4944 . -5) (undo-tree-id4945 . -5) (undo-tree-id4946 . -5) (undo-tree-id4947 . -5) (undo-tree-id4948 . -5) (undo-tree-id4949 . -5) (undo-tree-id4950 . -5) (undo-tree-id4951 . -5) (undo-tree-id4952 . -5) (undo-tree-id4953 . -5) (undo-tree-id4954 . -5) (undo-tree-id4955 . -5) (undo-tree-id4956 . -5) (undo-tree-id4957 . -5) (undo-tree-id4958 . -5) (undo-tree-id4959 . -5) (undo-tree-id4960 . -5) (undo-tree-id4961 . -5) (undo-tree-id4962 . -5) (undo-tree-id4963 . -5) (undo-tree-id4964 . -5) (undo-tree-id4965 . -5) (undo-tree-id4966 . -5) (undo-tree-id4967 . -5) (undo-tree-id4968 . -5) (undo-tree-id4969 . -5) (undo-tree-id4970 . -5) (undo-tree-id4971 . -5) (undo-tree-id4972 . -5) (undo-tree-id4973 . -5) (undo-tree-id4974 . -5) (undo-tree-id4975 . -5) (undo-tree-id4976 . -5) (undo-tree-id4977 . -5) (undo-tree-id4978 . -5) (undo-tree-id4979 . -5) (undo-tree-id4980 . -5) (undo-tree-id4981 . -5) (undo-tree-id4982 . -5) (undo-tree-id4983 . -5) 8883) nil (25164 47079 70069 100000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8507) (undo-tree-id364 . -21) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -21)) ((8507 . 8528)) (25164 46796 802597 0) 0 nil])
([nil nil ((8900 . 8901)) nil (25164 47079 67142 800000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . 8561) (8573 . 8589) (#("            " 0 12 (fontified nil)) . 8607) (8619 . 8635) (#("            " 0 12 (fontified nil)) . 8675) (8687 . 8703) (#("            " 0 12 (fontified nil)) . 8722) (8734 . 8750) (#("                " 0 16 (fontified nil)) . 8801) (8817 . 8837) (#("                " 0 16 (fontified nil)) . 8932) (8948 . 8968) (#("                    " 0 20 (fontified nil)) . 9008) (9028 . 9052)) ((#("                        " 0 15 (fontified nil) 15 19 (fontified nil) 19 24 (fontified nil)) . 9028) (undo-tree-id2543 . -1) (undo-tree-id2544 . -4) (undo-tree-id2545 . -5) (undo-tree-id2546 . -8) (undo-tree-id2547 . -9) (undo-tree-id2548 . -12) (undo-tree-id2549 . -13) (undo-tree-id2550 . -16) (undo-tree-id2551 . -17) (undo-tree-id2552 . -20) (undo-tree-id2553 . -21) (9008 . 9028) (#("                    " 0 20 (fontified nil)) . 8948) (undo-tree-id2554 . -1) (undo-tree-id2555 . -4) (undo-tree-id2556 . -5) (undo-tree-id2557 . -8) (undo-tree-id2558 . -9) (undo-tree-id2559 . -12) (undo-tree-id2560 . -13) (undo-tree-id2561 . -16) (undo-tree-id2562 . -17) (8932 . 8948) (#("                    " 0 20 (fontified nil)) . 8817) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -4) (undo-tree-id2566 . -5) (undo-tree-id2567 . -8) (undo-tree-id2568 . -9) (undo-tree-id2569 . -12) (undo-tree-id2570 . -13) (undo-tree-id2571 . -16) (undo-tree-id2572 . -17) (8801 . 8817) (#("                " 0 16 (fontified nil)) . 8734) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -4) (undo-tree-id2576 . -5) (undo-tree-id2577 . -8) (undo-tree-id2578 . -9) (undo-tree-id2579 . -12) (undo-tree-id2580 . -13) (8722 . 8734) (#("                " 0 16 (fontified nil)) . 8687) (undo-tree-id2581 . -1) (undo-tree-id2582 . -4) (undo-tree-id2583 . -5) (undo-tree-id2584 . -8) (undo-tree-id2585 . -9) (undo-tree-id2586 . -12) (undo-tree-id2587 . -13) (8675 . 8687) (#("                " 0 16 (fontified nil)) . 8619) (undo-tree-id2588 . -1) (undo-tree-id2589 . -4) (undo-tree-id2590 . -5) (undo-tree-id2591 . -8) (undo-tree-id2592 . -9) (undo-tree-id2593 . -12) (undo-tree-id2594 . -13) (8607 . 8619) (#("                " 0 16 (fontified nil)) . 8573) (undo-tree-id2595 . -1) (undo-tree-id2596 . -4) (undo-tree-id2597 . -5) (undo-tree-id2598 . -8) (undo-tree-id2599 . -9) (undo-tree-id2600 . -12) (undo-tree-id2601 . -13) (8561 . 8573)) (25164 46796 594085 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8900) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) 8901) nil (25164 47079 67138 500000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . 8508) (8516 . 8528)) ((#("            " 0 12 (fontified nil)) . 8516) (undo-tree-id2538 . -1) (undo-tree-id2539 . -4) (undo-tree-id2540 . -5) (undo-tree-id2541 . -8) (undo-tree-id2542 . -9) (8508 . 8516)) (25164 46796 375357 800000) 0 nil])
([nil nil ((8900 . 8901)) nil (25164 47079 67101 600000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . 7696) (7704 . 7716)) ((#("            " 0 12 (fontified nil)) . 7704) (undo-tree-id2533 . -1) (undo-tree-id2534 . -4) (undo-tree-id2535 . -5) (undo-tree-id2536 . -8) (undo-tree-id2537 . -9) (7696 . 7704)) (25164 46796 140204 0) 0 nil])
([nil nil ((8901 . 8922)) nil (25164 47079 67098 900000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -7704) (7696 . 7704) 7729) ((#("        " 0 8 (fontified nil)) . 7696) (undo-tree-id2524 . -8) (undo-tree-id2525 . -8) (undo-tree-id2526 . -8) (undo-tree-id2527 . -8) (undo-tree-id2528 . -8) (undo-tree-id2529 . -1) (undo-tree-id2530 . -4) (undo-tree-id2531 . -5) (undo-tree-id2532 . -8) (7704 . 7716)) (25164 46795 912942 300000) 0 nil])
([nil nil ((8922 . 8930)) nil (25164 47079 67091 300000) 0 nil])
([nil nil ((#("False" 0 5 (fontified t face font-lock-constant-face)) . -7743) (undo-tree-id362 . -5) (undo-tree-id363 . -5) 7748) ((7743 . 7748)) (25164 46795 703784 900000) 0 nil])
([nil nil ((apply -4 8859 8935 undo--wrap-and-run-primitive-undo 8859 8935 ((8920 . 8922) (8875 . 8877) 8895)) (t 25164 47079 90589 600000)) nil (25164 47087 841516 700000) 0 nil])
([nil nil ((7743 . 7747)) ((#("True" 0 4 (fontified t face font-lock-constant-face)) . 7743)) (25164 46795 496141 600000) 0 nil])
([nil nil ((apply 4 8859 8930 undo--wrap-and-run-primitive-undo 8859 8930 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -8918) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -8875) 8898)) (t 25164 47087 860589 600000)) nil (25164 47104 429895 800000) 0 nil])
([nil nil ((7728 . 7729) (7727 . 7729) (#("'" 0 1 (fontified nil face font-lock-variable-name-face)) . -7727) (7722 . 7728)) ((#("Doesn'" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil face font-lock-variable-name-face)) . 7722) (undo-tree-id2432 . -5) (undo-tree-id2433 . -5) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -4) (undo-tree-id2449 . -4) (undo-tree-id2450 . -4) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) (undo-tree-id2456 . -4) (undo-tree-id2457 . -4) (undo-tree-id2458 . -4) (undo-tree-id2459 . -4) (undo-tree-id2460 . -4) (undo-tree-id2461 . -4) (undo-tree-id2462 . -4) (undo-tree-id2463 . -4) (undo-tree-id2464 . -4) (undo-tree-id2465 . -4) (undo-tree-id2466 . -4) (undo-tree-id2467 . -4) (undo-tree-id2468 . -4) (undo-tree-id2469 . -4) (undo-tree-id2470 . -4) (undo-tree-id2471 . -4) (undo-tree-id2472 . -4) (undo-tree-id2473 . -4) (undo-tree-id2474 . -4) (undo-tree-id2475 . -4) (undo-tree-id2476 . -4) (undo-tree-id2477 . -4) (undo-tree-id2478 . -4) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -5) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (undo-tree-id2492 . -5) (undo-tree-id2493 . -5) (undo-tree-id2494 . -5) (undo-tree-id2495 . -5) (undo-tree-id2496 . -5) (undo-tree-id2497 . -5) (undo-tree-id2498 . -5) (undo-tree-id2499 . -5) (7727 . 7728) (#("''" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 7727) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . 7728) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1)) (25164 46795 275842 0) 0 nil])
([nil nil ((apply -4 8859 8935 undo--wrap-and-run-primitive-undo 8859 8935 ((8920 . 8922) (8875 . 8877) 8895)) (t 25164 47104 450589 600000)) nil (25164 47136 501696 600000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -7728) (undo-tree-id361 . -1) 7729) ((7728 . 7729)) (25164 46795 60076 600000) 0 nil])
([nil nil ((8858 . 8875)) nil (25164 47136 501694 300000) 0 nil])
([nil nil ((#("'" 0 1 (fontified nil face font-lock-string-face)) . -7727) (undo-tree-id360 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . 7728)) ((7727 . 7729)) (25164 46794 859188 800000) 0 nil])
([nil nil ((8875 . 8878)) nil (25164 47136 501692 100000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -7726) (undo-tree-id359 . -1) 7727) ((7726 . 7727)) (25164 46794 644328 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -8877) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) 8878) nil (25164 47136 501687 700000) 0 nil])
([nil nil ((7726 . 7727)) ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . 7726) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1)) (25164 46794 413718 600000) 0 nil])
([nil nil ((8877 . 8898)) nil (25164 47136 501647 700000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -7726) (undo-tree-id358 . -1) 7727) ((7726 . 7727)) (25164 46794 115549 700000) 0 nil])
([nil nil ((8898 . 8919)) nil (25164 47136 501645 600000) 0 nil])
([nil nil ((7726 . 7728)) ((#("nt" 0 2 (fontified t face font-lock-variable-name-face)) . 7726) (undo-tree-id2393 . -2) (undo-tree-id2394 . -2) (undo-tree-id2395 . -2) (undo-tree-id2396 . -2) (undo-tree-id2397 . -2) (undo-tree-id2398 . -2) (undo-tree-id2399 . -2) (undo-tree-id2400 . -2) (undo-tree-id2401 . -2) (undo-tree-id2402 . -2) (undo-tree-id2403 . -2) (undo-tree-id2404 . -2) (undo-tree-id2405 . -2) (undo-tree-id2406 . -2) (undo-tree-id2407 . -2) (undo-tree-id2408 . -2) (undo-tree-id2409 . -2) (undo-tree-id2410 . -2) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (undo-tree-id2413 . -2) (undo-tree-id2414 . -2) (undo-tree-id2415 . -2) (undo-tree-id2416 . -2) (undo-tree-id2417 . -2) (undo-tree-id2418 . -2) (undo-tree-id2419 . -2) (undo-tree-id2420 . -2) (undo-tree-id2421 . -2) (undo-tree-id2422 . -2) (undo-tree-id2423 . -2) (undo-tree-id2424 . -2)) (25164 46793 391512 400000) 0 nil])
([nil nil ((8919 . 8925)) nil (25164 47136 501643 300000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 7728) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 7728) (#("H" 0 1 (fontified t face font-lock-variable-name-face)) . 7728)) ((7728 . 7729) (7728 . 7729) (7728 . 7729)) (25164 46792 889854 100000) 0 nil])
([nil nil ((8925 . 8946)) nil (25164 47136 501640 400000) 0 nil])
([nil nil ((7728 . 7732)) ((#("Have" 0 2 (fontified t face font-lock-variable-name-face) 2 3 (fontified t face font-lock-variable-name-face) 3 4 (fontified t face font-lock-variable-name-face)) . 7728) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -2) (undo-tree-id2384 . -2) (undo-tree-id2385 . -2) (undo-tree-id2386 . -2) (undo-tree-id2387 . -2) (undo-tree-id2388 . -4) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4)) (25164 46792 624014 500000) 0 nil])
([nil nil ((8946 . 8953)) nil (25164 47136 501633 600000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -7730) (undo-tree-id356 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -7731) (undo-tree-id357 . -1) 7732) ((7730 . 7732)) (25164 46792 361929 500000) 0 nil])
([nil nil ((9397 . 9422) (t 25164 47136 520589 600000)) nil (25164 47160 878566 0) 0 nil])
([nil nil ((7730 . 7732)) ((#("ve" 0 2 (fontified t face font-lock-variable-name-face)) . 7730)) (25164 46792 135168 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9418) (undo-tree-id5645 . -4) (undo-tree-id5646 . -1) (undo-tree-id5647 . -4) (undo-tree-id5648 . -4) (undo-tree-id5649 . -4) (undo-tree-id5650 . -4) (undo-tree-id5651 . -4) (undo-tree-id5652 . -4) (undo-tree-id5653 . -4) (undo-tree-id5654 . -4) (undo-tree-id5655 . -4) (undo-tree-id5656 . -4) (undo-tree-id5657 . -4) (undo-tree-id5658 . -4) (undo-tree-id5659 . -4) (undo-tree-id5660 . -4) (undo-tree-id5661 . -4) (undo-tree-id5662 . -4) (undo-tree-id5663 . -4) (undo-tree-id5664 . -4) 9422) nil (25164 47160 878557 200000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t face font-lock-variable-name-face)) . -8488) (undo-tree-id353 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -8489) (undo-tree-id354 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -8490) (undo-tree-id355 . -1) 8491) ((8488 . 8491)) (25164 46791 872084 300000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -9414) (undo-tree-id5617 . -4) (undo-tree-id5618 . -4) (undo-tree-id5619 . -4) (undo-tree-id5620 . -4) (undo-tree-id5621 . -4) (undo-tree-id5622 . -4) (undo-tree-id5623 . -4) (undo-tree-id5624 . -4) (undo-tree-id5625 . -4) (undo-tree-id5626 . -4) (undo-tree-id5627 . -4) (undo-tree-id5628 . -4) (undo-tree-id5629 . -4) (undo-tree-id5630 . -4) (undo-tree-id5631 . -4) (undo-tree-id5632 . -4) (undo-tree-id5633 . -4) (undo-tree-id5634 . -4) (undo-tree-id5635 . -1) (undo-tree-id5636 . -4) (undo-tree-id5637 . -4) (undo-tree-id5638 . -4) (undo-tree-id5639 . -4) (undo-tree-id5640 . -4) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4) (undo-tree-id5643 . -4) (undo-tree-id5644 . -4) 9418) nil (25164 47160 875029 700000) 0 nil])
([nil nil ((8488 . 8493)) ((#("Doesn" 0 4 (fontified t face font-lock-variable-name-face) 4 5 (fontified t face font-lock-variable-name-face)) . 8488) (undo-tree-id2359 . -5) (undo-tree-id2360 . -5) (undo-tree-id2361 . -4) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -4) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -5) (undo-tree-id2377 . -5) (undo-tree-id2378 . -5) (undo-tree-id2379 . -5) (undo-tree-id2380 . -5)) (25164 46791 626145 600000) 0 nil])
([nil nil ((9414 . 9435)) nil (25164 47160 874961 500000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -8492) (undo-tree-id352 . -1) 8493) ((8492 . 8493)) (25164 46791 371383 700000) 0 nil])
([nil nil ((9435 . 9453)) nil (25164 47160 874959 100000) 0 nil])
([nil nil ((8492 . 8494)) ((#("nt" 0 2 (fontified t face font-lock-variable-name-face)) . 8492) (undo-tree-id2352 . -2) (undo-tree-id2353 . -2) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) (undo-tree-id2357 . -2) (undo-tree-id2358 . -2)) (25164 46791 156126 0) 0 nil])
([nil nil ((9453 . 9455)) nil (25164 47160 874956 0) 0 nil])
([nil nil ((8494 . 8498)) ((#("Have" 0 4 (fontified t face font-lock-variable-name-face)) . 8494)) (25164 46790 905091 500000) 0 nil])
([nil nil ((apply 4 8954 9025 undo--wrap-and-run-primitive-undo 8954 9025 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -9013) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -8970) 8998))) nil (25164 47160 874947 900000) 0 nil])
([nil nil ((#("True" 0 4 (fontified t face font-lock-constant-face)) . -8516) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) 8520) ((8516 . 8520)) (25164 46790 682063 300000) 0 nil])
([nil nil ((apply -4 8954 9030 undo--wrap-and-run-primitive-undo 8954 9030 ((9015 . 9017) (8970 . 8972) 8984)) (t 25164 47160 900589 600000)) nil (25164 47186 741413 0) 0 nil])
([nil nil ((8516 . 8521)) ((#("False" 0 5 (fontified t face font-lock-constant-face)) . 8516) (undo-tree-id2350 . -5) (undo-tree-id2351 . -5)) (25164 46790 458388 900000) 0 nil])
([nil nil ((apply 4 8954 9025 undo--wrap-and-run-primitive-undo 8954 9025 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -9013) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -8970) 8985)) (t 25164 47186 770589 600000)) nil (25164 47196 401439 200000) 0 nil])
([nil nil ((#("(not " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 8241) (undo-tree-id347 . -5)) ((8241 . 8246)) (25164 46790 244621 700000) 0 nil])
([nil nil ((apply -4 8954 9030 undo--wrap-and-run-primitive-undo 8954 9030 ((9015 . 9017) (8970 . 8972) 8986)) (t 25164 47196 420589 600000)) nil (25164 47214 635729 500000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -8249) (undo-tree-id346 . -1) 8250) ((8249 . 8250)) (25164 46789 901165 400000) 0 nil])
([nil current ((apply 4 8954 9025 undo--wrap-and-run-primitive-undo 8954 9025 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -9013) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -8970) 8995)) (t 25164 47214 660589 600000)) nil (25164 47228 379520 100000) 0 nil])
([nil nil ((#("and" 0 3 (fontified t face font-lock-keyword-face)) . -8250) (undo-tree-id344 . -3) (undo-tree-id345 . -3) 8253) ((8250 . 8253)) (25164 46789 356535 900000) 0 nil])
nil
([nil nil ((8250 . 8252)) ((#("or" 0 2 (fontified t face font-lock-keyword-face)) . 8250)) (25164 46788 704907 800000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -8253) (undo-tree-id339 . -1) (#("n" 0 1 (fontified t)) . -8254) (undo-tree-id340 . -1) (#("o" 0 1 (fontified t)) . -8255) (undo-tree-id341 . -1) (#("t" 0 1 (fontified t)) . -8256) (undo-tree-id342 . -1) (#(" " 0 1 (fontified t)) . -8257) (undo-tree-id343 . -1) 8258) ((8253 . 8258)) (25164 46788 366983 900000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -8282) (undo-tree-id336 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -8283) (undo-tree-id337 . -1) (#(":" 0 1 (fontified t)) . -8284) (undo-tree-id338 . -1) 8285) ((8282 . 8285)) (25164 46788 27118 500000) 0 nil])
([nil nil ((8282 . 8284)) ((#("w:" 0 2 (fontified t)) . 8282)) (25164 46787 582344 100000) 0 nil])
([nil nil ((#("not" 0 3 (fontified t face font-lock-keyword-face)) . -8524) (undo-tree-id334 . -3) (undo-tree-id335 . -3) 8527) ((8524 . 8527)) (25164 46787 139902 600000) 0 nil])
([nil nil ((8535 . 8548)) ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 8535) (undo-tree-id2343 . -1) (undo-tree-id2344 . -2) (undo-tree-id2345 . -5) (undo-tree-id2346 . -6) (undo-tree-id2347 . -9) (undo-tree-id2348 . -10) (undo-tree-id2349 . -1)) (25164 46786 717259 400000) 0 nil])
([nil nil ((#("enDomainHasSatisfyingValue" 0 18 (fontified t) 18 26 (fontified t)) . 8548) (undo-tree-id332 . -26) (undo-tree-id333 . -26) 8569) ((8548 . 8574)) (25164 46786 303635 300000) 0 nil])
([nil nil ((#("alteredQue" 0 10 (fontified t)) . 8525) (undo-tree-id330 . -10) (undo-tree-id331 . -10) 8535) ((8525 . 8535)) (25164 46785 899965 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8567 . 8568) (nil fontified nil 8566 . 8568) (nil fontified nil 8525 . 8566) (8525 . 8568)) ((#("alteredQueenDomainDoesntHaveSatisfyingValue" 0 41 (fontified nil) 41 42 (fontified nil) 42 43 (rear-nonsticky nil fontified nil)) . 8525) (undo-tree-id2319 . -43) (undo-tree-id2320 . -43) (undo-tree-id2321 . -43) (undo-tree-id2322 . -42) (undo-tree-id2323 . -42) (undo-tree-id2324 . -42) (undo-tree-id2325 . -42) (undo-tree-id2326 . -42) (undo-tree-id2327 . -42) (undo-tree-id2328 . -43) (undo-tree-id2329 . -43) (undo-tree-id2330 . -43) (undo-tree-id2331 . -43) (undo-tree-id2332 . -43) (undo-tree-id2333 . -43) (undo-tree-id2334 . -43) (undo-tree-id2335 . -43) (undo-tree-id2336 . -43) (undo-tree-id2337 . -43) (undo-tree-id2338 . -43) (undo-tree-id2339 . -43) (undo-tree-id2340 . -43) (undo-tree-id2341 . -43) (undo-tree-id2342 . -43) (nil rear-nonsticky t 8567 . 8568)) (25164 46785 414881 300000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8568)) ((8568 . 8569)) (25164 46785 34162 200000) 0 nil])
([nil nil ((#("            :" 0 12 (fontified t) 12 13 (fontified t)) . -8568) (undo-tree-id328 . -13) (undo-tree-id329 . -13)) ((8568 . 8581)) (25164 46784 698168 900000) 0 nil])
([nil nil ((8568 . 8569)) ((#(":" 0 1 (fontified t)) . 8568)) (25164 46783 587789 300000) 0 nil])
([nil nil ((8730 . 8731)) ((#("q" 0 1 (fontified t)) . 8730) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1)) (25164 46782 985955 200000) 0 nil] [nil nil ((8620 . 8671) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8692) (undo-tree-id326 . -38) (undo-tree-id327 . -38) 8730 (t 25164 46533 480589 600000)) ((8692 . 8743) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8620) (undo-tree-id2258 . -38) (undo-tree-id2259 . -38) (undo-tree-id2260 . -51) (undo-tree-id2261 . -1) (undo-tree-id2262 . -4) (undo-tree-id2263 . -5) (undo-tree-id2264 . -8) (undo-tree-id2265 . -9) (undo-tree-id2266 . -12) (undo-tree-id2267 . -13) (undo-tree-id2268 . -38) (undo-tree-id2269 . -38) (undo-tree-id2270 . -38) (undo-tree-id2271 . -38) (undo-tree-id2272 . -38)) (25164 46755 81221 0) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -8730) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) 8731) ((8730 . 8731) (t 25164 46763 200589 600000)) (25164 46763 181807 700000) 0 nil])
([nil nil ((8570 . 8621) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8620) (undo-tree-id325 . -38) 8658) ((8620 . 8671) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8570) (undo-tree-id2238 . -38) (undo-tree-id2239 . -38) (undo-tree-id2240 . -51) (undo-tree-id2241 . -1) (undo-tree-id2242 . -4) (undo-tree-id2243 . -5) (undo-tree-id2244 . -8) (undo-tree-id2245 . -9) (undo-tree-id2246 . -12) (undo-tree-id2247 . -13) (undo-tree-id2248 . -38) (undo-tree-id2249 . -38) (undo-tree-id2250 . -38) (undo-tree-id2251 . -38) (undo-tree-id2252 . -38) (undo-tree-id2253 . -38) (undo-tree-id2254 . -38) (undo-tree-id2255 . -38) (undo-tree-id2256 . -38) (undo-tree-id2257 . -38)) (25164 46753 797757 900000) 0 nil])
nil
([nil nil ((8509 . 8560) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8570) (undo-tree-id324 . -38) 8608) ((8570 . 8621) (#("                neighborDomain.remove(neighborRow)
" 0 16 (fontified t) 16 29 (fontified t) 29 31 (fontified t) 31 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t)) . 8509) (undo-tree-id2159 . -31) (undo-tree-id2160 . -34) (undo-tree-id2161 . -34) (undo-tree-id2162 . -34) (undo-tree-id2163 . -34) (undo-tree-id2164 . -34) (undo-tree-id2165 . -34) (undo-tree-id2166 . -34) (undo-tree-id2167 . -34) (undo-tree-id2168 . -34) (undo-tree-id2169 . -34) (undo-tree-id2170 . -34) (undo-tree-id2171 . -34) (undo-tree-id2172 . -34) (undo-tree-id2173 . -34) (undo-tree-id2174 . -34) (undo-tree-id2175 . -37) (undo-tree-id2176 . -37) (undo-tree-id2177 . -37) (undo-tree-id2178 . -37) (undo-tree-id2179 . -37) (undo-tree-id2180 . -37) (undo-tree-id2181 . -37) (undo-tree-id2182 . -51) (undo-tree-id2183 . -37) (undo-tree-id2184 . -37) (undo-tree-id2185 . -37) (undo-tree-id2186 . -37) (undo-tree-id2187 . -37) (undo-tree-id2188 . -37) (undo-tree-id2189 . -37) (undo-tree-id2190 . -38) (undo-tree-id2191 . -38) (undo-tree-id2192 . -31) (undo-tree-id2193 . -31) (undo-tree-id2194 . -31) (undo-tree-id2195 . -31) (undo-tree-id2196 . -31) (undo-tree-id2197 . -31) (undo-tree-id2198 . -37) (undo-tree-id2199 . -37) (undo-tree-id2200 . -37) (undo-tree-id2201 . -37) (undo-tree-id2202 . -37) (undo-tree-id2203 . -45) (undo-tree-id2204 . -45) (undo-tree-id2205 . -45) (undo-tree-id2206 . -45) (undo-tree-id2207 . -45) (undo-tree-id2208 . -51) (undo-tree-id2209 . -51) (undo-tree-id2210 . -51) (undo-tree-id2211 . -1) (undo-tree-id2212 . -4) (undo-tree-id2213 . -5) (undo-tree-id2214 . -8) (undo-tree-id2215 . -9) (undo-tree-id2216 . -12) (undo-tree-id2217 . -13) (undo-tree-id2218 . -38) (undo-tree-id2219 . -38) (undo-tree-id2220 . -38) (undo-tree-id2221 . -38) (undo-tree-id2222 . -38) (undo-tree-id2223 . -38) (undo-tree-id2224 . -38) (undo-tree-id2225 . -38) (undo-tree-id2226 . -38) (undo-tree-id2227 . -38) (undo-tree-id2228 . -38) (undo-tree-id2229 . -38) (undo-tree-id2230 . -38) (undo-tree-id2231 . -38) (undo-tree-id2232 . -38) (undo-tree-id2233 . -38) (undo-tree-id2234 . -38) (undo-tree-id2235 . -38) (undo-tree-id2236 . -38) (undo-tree-id2237 . -38)) (25164 46751 369528 300000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -8529) (8509 . 8529) 8547) ((#("                    " 0 20 (fontified nil)) . 8509) (undo-tree-id2149 . -1) (undo-tree-id2150 . -4) (undo-tree-id2151 . -5) (undo-tree-id2152 . -8) (undo-tree-id2153 . -9) (undo-tree-id2154 . -12) (undo-tree-id2155 . -13) (undo-tree-id2156 . -16) (undo-tree-id2157 . -17) (undo-tree-id2158 . -20) (8529 . 8545)) (25164 46750 62155 900000) 0 nil])
([nil nil ((#("                        " 0 15 (fontified nil) 15 19 (fontified nil) 19 24 (fontified nil)) . -9041) (9021 . 9041) (#("                    " 0 20 (fontified nil)) . -8961) (8945 . 8961) (#("                    " 0 20 (fontified nil)) . -8830) (8814 . 8830) (#("                " 0 16 (fontified nil)) . -8747) (8735 . 8747) (#("                " 0 16 (fontified nil)) . -8679) (8667 . 8679) (#("                " 0 16 (fontified nil)) . -8633) (8621 . 8633) (#("            " 0 12 (fontified nil)) . -8572) (8564 . 8572) 9079) ((#("        " 0 8 (fontified nil)) . 8564) (undo-tree-id2100 . -1) (undo-tree-id2101 . -4) (undo-tree-id2102 . -5) (undo-tree-id2103 . -8) (8572 . 8584) (#("            " 0 12 (fontified nil)) . 8621) (undo-tree-id2104 . -1) (undo-tree-id2105 . -4) (undo-tree-id2106 . -5) (undo-tree-id2107 . -8) (undo-tree-id2108 . -9) (undo-tree-id2109 . -12) (8633 . 8649) (#("            " 0 12 (fontified nil)) . 8667) (undo-tree-id2110 . -1) (undo-tree-id2111 . -4) (undo-tree-id2112 . -5) (undo-tree-id2113 . -8) (undo-tree-id2114 . -9) (undo-tree-id2115 . -12) (8679 . 8695) (#("            " 0 12 (fontified nil)) . 8735) (undo-tree-id2116 . -1) (undo-tree-id2117 . -4) (undo-tree-id2118 . -5) (undo-tree-id2119 . -8) (undo-tree-id2120 . -9) (undo-tree-id2121 . -12) (8747 . 8763) (#("                " 0 16 (fontified nil)) . 8814) (undo-tree-id2122 . -1) (undo-tree-id2123 . -4) (undo-tree-id2124 . -5) (undo-tree-id2125 . -8) (undo-tree-id2126 . -9) (undo-tree-id2127 . -12) (undo-tree-id2128 . -13) (undo-tree-id2129 . -16) (8830 . 8850) (#("                " 0 16 (fontified nil)) . 8945) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -4) (undo-tree-id2133 . -5) (undo-tree-id2134 . -8) (undo-tree-id2135 . -9) (undo-tree-id2136 . -12) (undo-tree-id2137 . -13) (undo-tree-id2138 . -16) (8961 . 8981) (#("                    " 0 20 (fontified nil)) . 9021) (undo-tree-id2139 . -1) (undo-tree-id2140 . -4) (undo-tree-id2141 . -5) (undo-tree-id2142 . -8) (undo-tree-id2143 . -9) (undo-tree-id2144 . -12) (undo-tree-id2145 . -13) (undo-tree-id2146 . -16) (undo-tree-id2147 . -17) (undo-tree-id2148 . -20) (9041 . 9065)) (25164 46749 455393 500000) 0 nil])
([nil nil ((7869 . 7882) (t 25164 46547 390589 600000)) ((#("
            " 0 1 (fontified t) 1 5 (fontified t) 5 9 (fontified t) 9 13 (fontified t)) . 7869) (undo-tree-id2045 . -13) (undo-tree-id2046 . -13) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -5) (undo-tree-id2070 . -5) (undo-tree-id2071 . -5) (undo-tree-id2072 . -5) (undo-tree-id2073 . -5) (undo-tree-id2074 . -5) (undo-tree-id2075 . -5) (undo-tree-id2076 . -5) (undo-tree-id2077 . -5) (undo-tree-id2078 . -5) (undo-tree-id2079 . -5) (undo-tree-id2080 . -5) (undo-tree-id2081 . -5) (undo-tree-id2082 . -5) (undo-tree-id2083 . -5) (undo-tree-id2084 . -9) (undo-tree-id2085 . -9) (undo-tree-id2086 . -9) (undo-tree-id2087 . -9) (undo-tree-id2088 . -9) (undo-tree-id2089 . -1) (undo-tree-id2090 . -2) (undo-tree-id2091 . -5) (undo-tree-id2092 . -6) (undo-tree-id2093 . -9) (undo-tree-id2094 . -10) (undo-tree-id2095 . -13) (undo-tree-id2096 . -13) (undo-tree-id2097 . -13) (undo-tree-id2098 . -13) (undo-tree-id2099 . -13)) (25164 46749 100616 400000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7878) (undo-tree-id323 . -4) 7882) ((7878 . 7882)) (25164 46748 764844 900000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7874) (undo-tree-id322 . -4) 7878) ((7874 . 7878)) (25164 46748 196265 500000) 0 nil])
([nil nil ((7870 . 7882) (#("    " 0 4 (fontified t)) . 7870) (undo-tree-id321 . -4) 7874) ((7870 . 7874) (#("            " 0 12 (fontified t)) . 7870) (undo-tree-id2017 . -12) (undo-tree-id2018 . -12) (undo-tree-id2019 . -12) (undo-tree-id2020 . -12) (undo-tree-id2021 . -12) (undo-tree-id2022 . -12) (undo-tree-id2023 . -12) (undo-tree-id2024 . -12) (undo-tree-id2025 . -12) (undo-tree-id2026 . -12) (undo-tree-id2027 . -12) (undo-tree-id2028 . -12) (undo-tree-id2029 . -12) (undo-tree-id2030 . -12) (undo-tree-id2031 . -12) (undo-tree-id2032 . -12) (undo-tree-id2033 . -12) (undo-tree-id2034 . -12) (undo-tree-id2035 . -1) (undo-tree-id2036 . -4) (undo-tree-id2037 . -5) (undo-tree-id2038 . -8) (undo-tree-id2039 . -9) (undo-tree-id2040 . -12) (undo-tree-id2041 . -12) (undo-tree-id2042 . -12) (undo-tree-id2043 . -12) (undo-tree-id2044 . -12)) (25164 46747 968253 400000) 0 nil])
([nil nil ((7882 . 7884)) ((#("te" 0 1 (fontified t) 1 2 (fontified t)) . 7882) (undo-tree-id2010 . -2) (undo-tree-id2011 . -2) (undo-tree-id2012 . -2) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (undo-tree-id2016 . -2)) (25164 46747 730879 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -7882) (undo-tree-id319 . -1) (#("e" 0 1 (fontified t)) . -7883) (undo-tree-id320 . -1) 7884) ((7882 . 7884)) (25164 46747 538007 400000) 0 nil])
([nil nil ((7882 . 7891)) ((#("test = al" 0 4 (fontified t face font-lock-variable-name-face) 4 7 (fontified t) 7 9 (fontified t)) . 7882) (undo-tree-id2002 . -9) (undo-tree-id2003 . -9) (undo-tree-id2004 . -9) (undo-tree-id2005 . -9) (undo-tree-id2006 . -9) (undo-tree-id2007 . -9) (undo-tree-id2008 . -9) (undo-tree-id2009 . -9)) (25164 46747 301446 300000) 0 nil])
([nil nil ((7889 . 7932) (#("al" 0 2 (fontified t)) . -7889) (undo-tree-id318 . -2) 7891) ((7889 . 7891) (#("alteredQueenDomainDoesntHaveSatisfyingValue" 0 43 (fontified t)) . 7889)) (25164 46747 105207 700000) 0 nil])
([nil nil ((8571 . 8592)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 8571) (undo-tree-id1836 . -21) (undo-tree-id1837 . -21) (undo-tree-id1838 . -21) (undo-tree-id1839 . -21) (undo-tree-id1840 . -21) (undo-tree-id1841 . -21) (undo-tree-id1842 . -21) (undo-tree-id1843 . -21) (undo-tree-id1844 . -21) (undo-tree-id1845 . -21) (undo-tree-id1846 . -21) (undo-tree-id1847 . -21) (undo-tree-id1848 . -21) (undo-tree-id1849 . -21) (undo-tree-id1850 . -21) (undo-tree-id1851 . -21) (undo-tree-id1852 . -21) (undo-tree-id1853 . -21) (undo-tree-id1854 . -21) (undo-tree-id1855 . -21) (undo-tree-id1856 . -21) (undo-tree-id1857 . -21) (undo-tree-id1858 . -21) (undo-tree-id1859 . -21) (undo-tree-id1860 . -21) (undo-tree-id1861 . -21) (undo-tree-id1862 . -21) (undo-tree-id1863 . -21) (undo-tree-id1864 . -21) (undo-tree-id1865 . -21) (undo-tree-id1866 . -21) (undo-tree-id1867 . -21) (undo-tree-id1868 . -21) (undo-tree-id1869 . -21) (undo-tree-id1870 . -21) (undo-tree-id1871 . -21) (undo-tree-id1872 . -21) (undo-tree-id1873 . -21) (undo-tree-id1874 . -21) (undo-tree-id1875 . -21) (undo-tree-id1876 . -21) (undo-tree-id1877 . -21) (undo-tree-id1878 . -21) (undo-tree-id1879 . -21) (undo-tree-id1880 . -21) (undo-tree-id1881 . -21) (undo-tree-id1882 . -21) (undo-tree-id1883 . -21) (undo-tree-id1884 . -21) (undo-tree-id1885 . -21) (undo-tree-id1886 . -21) (undo-tree-id1887 . -21) (undo-tree-id1888 . -21) (undo-tree-id1889 . -21) (undo-tree-id1890 . -21) (undo-tree-id1891 . -21) (undo-tree-id1892 . -21) (undo-tree-id1893 . -21) (undo-tree-id1894 . -21) (undo-tree-id1895 . -21) (undo-tree-id1896 . -21) (undo-tree-id1897 . -21) (undo-tree-id1898 . -21) (undo-tree-id1899 . -21) (undo-tree-id1900 . -21) (undo-tree-id1901 . -21) (undo-tree-id1902 . -21) (undo-tree-id1903 . -21) (undo-tree-id1904 . -21) (undo-tree-id1905 . -21) (undo-tree-id1906 . -21) (undo-tree-id1907 . -21) (undo-tree-id1908 . -21) (undo-tree-id1909 . -21) (undo-tree-id1910 . -21) (undo-tree-id1911 . -21) (undo-tree-id1912 . -21) (undo-tree-id1913 . -21) (undo-tree-id1914 . -21) (undo-tree-id1915 . -21) (undo-tree-id1916 . -21) (undo-tree-id1917 . -21) (undo-tree-id1918 . -21) (undo-tree-id1919 . -1) (undo-tree-id1920 . -21) (undo-tree-id1921 . -21) (undo-tree-id1922 . -21) (undo-tree-id1923 . -21) (undo-tree-id1924 . -21) (undo-tree-id1925 . -21) (undo-tree-id1926 . -21) (undo-tree-id1927 . -21) (undo-tree-id1928 . -21) (undo-tree-id1929 . -21) (undo-tree-id1930 . -21) (undo-tree-id1931 . -21) (undo-tree-id1932 . -21) (undo-tree-id1933 . -21) (undo-tree-id1934 . -21) (undo-tree-id1935 . -21) (undo-tree-id1936 . -21) (undo-tree-id1937 . -21) (undo-tree-id1938 . -21) (undo-tree-id1939 . -21) (undo-tree-id1940 . -21) (undo-tree-id1941 . -21) (undo-tree-id1942 . -21) (undo-tree-id1943 . -21) (undo-tree-id1944 . -21) (undo-tree-id1945 . -21) (undo-tree-id1946 . -21) (undo-tree-id1947 . -21) (undo-tree-id1948 . -21) (undo-tree-id1949 . -21) (undo-tree-id1950 . -21) (undo-tree-id1951 . -21) (undo-tree-id1952 . -21) (undo-tree-id1953 . -21) (undo-tree-id1954 . -21) (undo-tree-id1955 . -21) (undo-tree-id1956 . -21) (undo-tree-id1957 . -21) (undo-tree-id1958 . -21) (undo-tree-id1959 . -21) (undo-tree-id1960 . -21) (undo-tree-id1961 . -21) (undo-tree-id1962 . -21) (undo-tree-id1963 . -21) (undo-tree-id1964 . -21) (undo-tree-id1965 . -21) (undo-tree-id1966 . -21) (undo-tree-id1967 . -21) (undo-tree-id1968 . -21) (undo-tree-id1969 . -21) (undo-tree-id1970 . -21) (undo-tree-id1971 . -21) (undo-tree-id1972 . -21) (undo-tree-id1973 . -21) (undo-tree-id1974 . -21) (undo-tree-id1975 . -21) (undo-tree-id1976 . -21) (undo-tree-id1977 . -21) (undo-tree-id1978 . -21) (undo-tree-id1979 . -21) (undo-tree-id1980 . -21) (undo-tree-id1981 . -21) (undo-tree-id1982 . -21) (undo-tree-id1983 . -21) (undo-tree-id1984 . -21) (undo-tree-id1985 . -21) (undo-tree-id1986 . -21) (undo-tree-id1987 . -1) (undo-tree-id1988 . -2) (undo-tree-id1989 . -5) (undo-tree-id1990 . -6) (undo-tree-id1991 . -9) (undo-tree-id1992 . -10) (undo-tree-id1993 . -13) (undo-tree-id1994 . -14) (undo-tree-id1995 . -17) (undo-tree-id1996 . -18) (undo-tree-id1997 . -21) (undo-tree-id1998 . -21) (undo-tree-id1999 . -21) (undo-tree-id2000 . -21) (undo-tree-id2001 . -21)) (25164 46746 886866 200000) 0 nil])
([nil nil ((8592 . 8599)) ((#("if test" 0 2 (fontified t face font-lock-keyword-face) 2 7 (fontified t)) . 8592) (undo-tree-id1686 . -7) (undo-tree-id1687 . -7) (undo-tree-id1688 . -7) (undo-tree-id1689 . -7) (undo-tree-id1690 . -7) (undo-tree-id1691 . -7) (undo-tree-id1692 . -7) (undo-tree-id1693 . -7) (undo-tree-id1694 . -7) (undo-tree-id1695 . -7) (undo-tree-id1696 . -7) (undo-tree-id1697 . -7) (undo-tree-id1698 . -7) (undo-tree-id1699 . -7) (undo-tree-id1700 . -7) (undo-tree-id1701 . -7) (undo-tree-id1702 . -7) (undo-tree-id1703 . -7) (undo-tree-id1704 . -7) (undo-tree-id1705 . -7) (undo-tree-id1706 . -7) (undo-tree-id1707 . -7) (undo-tree-id1708 . -7) (undo-tree-id1709 . -7) (undo-tree-id1710 . -7) (undo-tree-id1711 . -7) (undo-tree-id1712 . -7) (undo-tree-id1713 . -7) (undo-tree-id1714 . -7) (undo-tree-id1715 . -7) (undo-tree-id1716 . -7) (undo-tree-id1717 . -7) (undo-tree-id1718 . -7) (undo-tree-id1719 . -7) (undo-tree-id1720 . -7) (undo-tree-id1721 . -7) (undo-tree-id1722 . -7) (undo-tree-id1723 . -7) (undo-tree-id1724 . -7) (undo-tree-id1725 . -7) (undo-tree-id1726 . -7) (undo-tree-id1727 . -7) (undo-tree-id1728 . -7) (undo-tree-id1729 . -7) (undo-tree-id1730 . -7) (undo-tree-id1731 . -7) (undo-tree-id1732 . -7) (undo-tree-id1733 . -7) (undo-tree-id1734 . -7) (undo-tree-id1735 . -7) (undo-tree-id1736 . -7) (undo-tree-id1737 . -7) (undo-tree-id1738 . -7) (undo-tree-id1739 . -7) (undo-tree-id1740 . -7) (undo-tree-id1741 . -7) (undo-tree-id1742 . -7) (undo-tree-id1743 . -7) (undo-tree-id1744 . -7) (undo-tree-id1745 . -7) (undo-tree-id1746 . -7) (undo-tree-id1747 . -7) (undo-tree-id1748 . -7) (undo-tree-id1749 . -7) (undo-tree-id1750 . -7) (undo-tree-id1751 . -7) (undo-tree-id1752 . -7) (undo-tree-id1753 . -7) (undo-tree-id1754 . -7) (undo-tree-id1755 . -7) (undo-tree-id1756 . -7) (undo-tree-id1757 . -7) (undo-tree-id1758 . -7) (undo-tree-id1759 . -7) (undo-tree-id1760 . -7) (undo-tree-id1761 . -7) (undo-tree-id1762 . -7) (undo-tree-id1763 . -7) (undo-tree-id1764 . -7) (undo-tree-id1765 . -7) (undo-tree-id1766 . -7) (undo-tree-id1767 . -7) (undo-tree-id1768 . -7) (undo-tree-id1769 . -7) (undo-tree-id1770 . -7) (undo-tree-id1771 . -7) (undo-tree-id1772 . -7) (undo-tree-id1773 . -7) (undo-tree-id1774 . -7) (undo-tree-id1775 . -7) (undo-tree-id1776 . -7) (undo-tree-id1777 . -7) (undo-tree-id1778 . -7) (undo-tree-id1779 . -7) (undo-tree-id1780 . -7) (undo-tree-id1781 . -7) (undo-tree-id1782 . -7) (undo-tree-id1783 . -7) (undo-tree-id1784 . -7) (undo-tree-id1785 . -7) (undo-tree-id1786 . -7) (undo-tree-id1787 . -7) (undo-tree-id1788 . -7) (undo-tree-id1789 . -7) (undo-tree-id1790 . -7) (undo-tree-id1791 . -7) (undo-tree-id1792 . -7) (undo-tree-id1793 . -7) (undo-tree-id1794 . -7) (undo-tree-id1795 . -7) (undo-tree-id1796 . -7) (undo-tree-id1797 . -7) (undo-tree-id1798 . -7) (undo-tree-id1799 . -7) (undo-tree-id1800 . -7) (undo-tree-id1801 . -7) (undo-tree-id1802 . -7) (undo-tree-id1803 . -7) (undo-tree-id1804 . -7) (undo-tree-id1805 . -7) (undo-tree-id1806 . -7) (undo-tree-id1807 . -7) (undo-tree-id1808 . -7) (undo-tree-id1809 . -7) (undo-tree-id1810 . -7) (undo-tree-id1811 . -7) (undo-tree-id1812 . -7) (undo-tree-id1813 . -7) (undo-tree-id1814 . -7) (undo-tree-id1815 . -7) (undo-tree-id1816 . -7) (undo-tree-id1817 . -7) (undo-tree-id1818 . -7) (undo-tree-id1819 . -7) (undo-tree-id1820 . -7) (undo-tree-id1821 . -7) (undo-tree-id1822 . -7) (undo-tree-id1823 . -7) (undo-tree-id1824 . -7) (undo-tree-id1825 . -7) (undo-tree-id1826 . -7) (undo-tree-id1827 . -7) (undo-tree-id1828 . -7) (undo-tree-id1829 . -7) (undo-tree-id1830 . -7) (undo-tree-id1831 . -7) (undo-tree-id1832 . -7) (undo-tree-id1833 . -7) (undo-tree-id1834 . -7) (undo-tree-id1835 . -7)) (25164 46746 695388 600000) 0 nil])
([nil nil ((8599 . 8600)) ((#(":" 0 1 (fontified t)) . 8599) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1)) (25164 46746 469391 200000) 0 nil])
([nil nil ((#("                    " 0 20 (fontified nil)) . -8625) (8601 . 8625) 8650) ((#("                        " 0 24 (fontified nil)) . 8601) (undo-tree-id1672 . -1) (undo-tree-id1673 . -4) (undo-tree-id1674 . -5) (undo-tree-id1675 . -8) (undo-tree-id1676 . -9) (undo-tree-id1677 . -12) (undo-tree-id1678 . -13) (undo-tree-id1679 . -16) (undo-tree-id1680 . -17) (undo-tree-id1681 . -20) (undo-tree-id1682 . -21) (undo-tree-id1683 . -24) (8625 . 8645)) (25164 46746 250998 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8671) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 8672 (t 25164 46620 690589 600000)) ((8671 . 8672)) (25164 46746 48395 400000) 0 nil])
([nil nil ((8671 . 8675)) ((#("not " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 8671)) (25164 46745 867663 400000) 0 nil])
([nil nil ((#("remove" 0 6 (fontified t)) . -8640) (undo-tree-id269 . -6) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -6) (undo-tree-id286 . -6) (undo-tree-id287 . -6) (undo-tree-id288 . -6) (undo-tree-id289 . -6) (undo-tree-id290 . -6) (undo-tree-id291 . -6) (undo-tree-id292 . -6) (undo-tree-id293 . -6) (undo-tree-id294 . -6) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) 8646 (t 25164 46653 670589 600000)) ((8640 . 8646)) (25164 46745 664317 300000) 0 nil])
([nil nil ((8640 . 8647)) ((#("discard" 0 7 (fontified t)) . 8640) (undo-tree-id1671 . -7)) (25164 46745 461474 0) 0 nil])
([nil nil ((8599 . 8604) (t 25164 46676 589 600000)) ((#(" and " 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 8599) (undo-tree-id1585 . -5) (undo-tree-id1586 . -5) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -3) (undo-tree-id1600 . -3) (undo-tree-id1601 . -3) (undo-tree-id1602 . -3) (undo-tree-id1603 . -3) (undo-tree-id1604 . -3) (undo-tree-id1605 . -3) (undo-tree-id1606 . -3) (undo-tree-id1607 . -3) (undo-tree-id1608 . -3) (undo-tree-id1609 . -3) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) (undo-tree-id1616 . -4) (undo-tree-id1617 . -5) (undo-tree-id1618 . -5) (undo-tree-id1619 . -5) (undo-tree-id1620 . -5) (undo-tree-id1621 . -5) (undo-tree-id1622 . -5) (undo-tree-id1623 . -5) (undo-tree-id1624 . -5) (undo-tree-id1625 . -5) (undo-tree-id1626 . -5) (undo-tree-id1627 . -5) (undo-tree-id1628 . -5) (undo-tree-id1629 . -5) (undo-tree-id1630 . -5) (undo-tree-id1631 . -5) (undo-tree-id1632 . -5) (undo-tree-id1633 . -5) (undo-tree-id1634 . -5) (undo-tree-id1635 . -5) (undo-tree-id1636 . -5) (undo-tree-id1637 . -5) (undo-tree-id1638 . -5) (undo-tree-id1639 . -5) (undo-tree-id1640 . -5) (undo-tree-id1641 . -5) (undo-tree-id1642 . -4) (undo-tree-id1643 . -4) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -3) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -5) (undo-tree-id1667 . -5) (undo-tree-id1668 . -5) (undo-tree-id1669 . -5) (undo-tree-id1670 . -5)) (25164 46745 329896 800000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -8599) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("a" 0 1 (fontified t)) . -8600) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("n" 0 1 (fontified t)) . -8601) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -8602) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -8603) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 8604) ((8599 . 8604) (t 25164 46737 580589 600000)) (25164 46744 111201 600000) 0 nil])
nil
